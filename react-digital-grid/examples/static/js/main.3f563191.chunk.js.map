{"version":3,"sources":["components/Home.js","digital-grid/Paginator.js","digital-grid/Header.js","digital-grid/Column.js","digital-grid/Cell.js","digital-grid/ExpandableCell.js","digital-grid/plugins/styles.js","digital-grid/Grid.js","components/Simple.js","scripts/data.js","components/Full.js","components/_common/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","Paginator","maximumNumberOfPageButtons","currentPage","this","props","pageNr","pageSize","dataCount","totalNumberOfPages","Math","ceil","currentPageNumber","firstPageButton","number","enabled","previousPageButton","nextPageButton","lastPageButton","displayResultsFrom","displayResultsTo","min","displayResultsTotal","pageNumber","onPageChanged","model","computeModel","className","classNames","onClick","changePage","icon","faAngleDoubleLeft","faAngleLeft","faAngleRight","faAngleDoubleRight","defaultProps","Header","isCurrent","field","orderBy","onSortChanged","orderDir","sortable","styles","faCaretDown","faCaretUp","faSort","class","handleSortChange","header","headerClassName","title","toolTip","renderHeaderContent","Column","Cell","data","valPlain","valFormatted","renderer","isClickable","ev","dataItem","preventDefault","handleOnClick","emptyPlaceholder","renderCell","children","ExpandableCell","isVisible","e","onExpand","handleOnCellClick","isExpanded","faMinusSquare","faPlusSquare","importStyles","skin","console","log","imports","push","Grid","displayName","name","state","selectedKeys","selectedItems","selectedLast","toggleSelectRow","bind","renderRows","_styles","prevProps","event","key","isCtrl","ctrlKey","isShift","shiftKey","document","getSelection","removeAllRanges","newSelectedKeys","newSelectedItems","slice","keyStart","keyEnd","currentKeys","forEach","item","keyField","indexOf","update","Code","filter","code","selItem","setState","onSelectChanged","noData","length","loading","colSpan","isExpandable","align","faSync","emptyText","map","index","classNameRowRenderer","onMouseOver","onMouseOut","onMouseDown","isSelected","enableSelection","currentTarget","classList","add","remove","Fragment","join","dataCopy","Object","assign","dataItems","items","React","Children","child","i","onCellClick","style","cloneElement","SubGrid","newPage","onStateChanged","newOrderBy","neworderDir","validType","isValidElement","type","toArray","subChild","gridData","showSelectionInfo","page","handlePageChange","Simple","Id","FirstName","LastName","get","options","feedback","url","error","total","fetch","then","response","json","arr","sortBy","sortDir","sort","a","b","aVal","bVal","val","_filter","offset","paginatedItems","pages","Full","count","skins","text","loadData","_data","value","onChange","target","option","id","newState","src","picture","alt","MainMenu","href","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f563191.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>Home here</div>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\n\r\nimport { faAngleDoubleLeft, faAngleLeft, faAngleRight, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport classNames from 'classnames'\r\n\r\nexport default class Paginator extends Component {\r\n    maximumNumberOfPageButtons = 11;\r\n\r\n    computeModel() {\r\n        let currentPage = this.props.pageNr;\r\n        let pageSize = this.props.pageSize;\r\n        let dataCount = this.props.dataCount;\r\n        let totalNumberOfPages = Math.ceil(dataCount / pageSize);\r\n\r\n        return {\r\n            currentPageNumber: currentPage,\r\n            totalNumberOfPages: totalNumberOfPages,\r\n            firstPageButton: {\r\n                number: 1,\r\n                enabled: currentPage > 1\r\n            },\r\n            previousPageButton: {\r\n                number: currentPage > 1 ? currentPage - 1 : 1,\r\n                enabled: currentPage > 1\r\n            },\r\n            nextPageButton: {\r\n                number: currentPage < totalNumberOfPages ? currentPage + 1 : totalNumberOfPages,\r\n                enabled: currentPage < totalNumberOfPages\r\n            },\r\n            lastPageButton: {\r\n                number: totalNumberOfPages,\r\n                enabled: currentPage < totalNumberOfPages\r\n            },\r\n            displayResultsFrom: dataCount === 0 ? 0 : (pageSize * (currentPage - 1)) + 1,\r\n            displayResultsTo: dataCount === 0 ? 0 : Math.min((((pageSize * (currentPage - 1))) + pageSize), dataCount),\r\n            displayResultsTotal: dataCount\r\n        };\r\n    }\r\n\r\n    changePage(pageNumber) {\r\n        this.props.onPageChanged(pageNumber);\r\n    }\r\n\r\n    render() {\r\n        var model = this.computeModel();\r\n        return (\r\n            <div className=\"pagination\">\r\n                <div className={classNames({'first': true, 'disabled': !model.firstPageButton.enabled})} onClick={() => this.changePage(model.firstPageButton.number)}>\r\n                    <FontAwesomeIcon icon={faAngleDoubleLeft} />\r\n                </div>\r\n                <div className={classNames({'prev': true, 'disabled': !model.previousPageButton.enabled})} onClick={() => this.changePage(model.previousPageButton.number)}>\r\n                    <FontAwesomeIcon icon={faAngleLeft} />\r\n                </div>\r\n                <div className={classNames({'item': true })}><span className=\"nowrap\">Page {model.currentPageNumber} of {model.totalNumberOfPages}</span></div>\r\n                \r\n                <div className={classNames({'next': true, 'disabled': !model.nextPageButton.enabled})} onClick={() => this.changePage(model.nextPageButton.number)} >\r\n                    <FontAwesomeIcon icon={faAngleRight} />\r\n                </div>\r\n                <div className={classNames({'last': true, 'disabled': !model.lastPageButton.enabled})} onClick={() => this.changePage(model.lastPageButton.number)} >\r\n                    <FontAwesomeIcon icon={faAngleDoubleRight} />\r\n                </div>\r\n                <div className=\"right\">\r\n                    Displaying results {model.displayResultsFrom} - {model.displayResultsTo} of {model.displayResultsTotal}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPaginator.defaultProps = {\r\n    onPageChanged: () => {}\r\n}","import React, { Component } from 'react';\r\nimport { faCaretDown, faCaretUp, faSort } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default class Header extends Component {\r\n\r\n    handleSortChange() {\r\n        let isCurrent = (this.props.field === this.props.orderBy);\r\n        this.props.onSortChanged(this.props.field, !isCurrent ? 'ASC' : (this.props.orderDir === 'ASC') ? 'DESC' : 'ASC');\r\n    }\r\n\r\n    renderHeaderContent() {\r\n        if (this.props.sortable) {\r\n            const styles = {\r\n                icon: (this.props.field === this.props.orderBy) ? ((this.props.orderDir === \"DESC\") ? faCaretDown : faCaretUp) : faSort,\r\n                class: (this.props.field === this.props.orderBy) ? \"active\" : \"inactive\"\r\n            };\r\n            \r\n            return (\r\n                <table className=\"grid-sort-link\" onClick={() => this.handleSortChange()}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className=\"pr5\">\r\n                                {this.props.header}\r\n                            </td>\r\n                            <td className=\"align-middle\">\r\n                                <FontAwesomeIcon icon={styles.icon} className={styles.class} />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n        else {\r\n            return this.props.header;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <th\r\n                className={`${this.props.className} grid-header-cell ${this.props.headerClassName}`}\r\n                title={this.props.toolTip + (this.props.toolTip && this.props.sortable ? \"\\n\" : \"\") + (this.props.sortable ? \"Click to sort using this value!\" : \"\")}>\r\n                <div className=\"gridHeader\">\r\n                    {this.renderHeaderContent()}\r\n                </div>\r\n            </th>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    toolTip: \"\",\r\n    headerClassName: '',\r\n    sortable: false,\r\n    className: ''\r\n}","import { Component } from 'react';\r\n\r\nexport default class Column extends Component {\r\n    \r\n}\r\n\r\nColumn.defaultProps = {\r\n    isClickable: false\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function Cell(props) {\r\n  const renderCell = () => {\r\n    const handleOnClick = (field, valPlain, dataItem, ev) => {\r\n      props.onClick(field, valPlain, dataItem);\r\n      ev.preventDefault();\r\n    };\r\n\r\n    let data = props.data;\r\n    let valPlain = data[props.field];\r\n\r\n    let valFormatted = valPlain;\r\n    if (props.renderer) {\r\n      valFormatted = props.renderer(data);\r\n    }\r\n\r\n    if (props.isClickable && (valPlain !== '' || props.renderer)) {\r\n      valFormatted = (\r\n        <span\r\n          class='link'\r\n          onClick={ev => handleOnClick(props.field, valPlain, data, ev)}\r\n        >\r\n          {valFormatted}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (valFormatted === '') {\r\n      if (props.emptyPlaceholder !== '') valFormatted = props.emptyPlaceholder;\r\n    }\r\n\r\n    return valFormatted;\r\n  };\r\n\r\n  return (\r\n    <td className={props.className}>\r\n      {renderCell()}\r\n      {props.children}\r\n    </td>\r\n  );\r\n}\r\n\r\nCell.defaultProps = {\r\n  onClick: () => {}\r\n};\r\n","import React from 'react';\r\n\r\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function ExpandableCell(props) {\r\n    const handleOnCellClick = (e) => {\r\n        props.onExpand(props.dataItem);\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        props.isVisible && <td className={props.className}>\r\n            <span className=\"link\" onClick={(e) => handleOnCellClick(e)}>\r\n                <FontAwesomeIcon icon={props.isExpanded ? faMinusSquare : faPlusSquare} />\r\n            </span>\r\n        </td>\r\n    );\r\n}\r\n\r\nExpandableCell.defaultProps = {\r\n    isExpanded: false,\r\n    onExpand: () => { },\r\n    isVisible: false\r\n}","// TO DO: import only once, using localStorage\r\n// TO DO: import based on the supplied style\r\nfunction importStyles(skin) {\r\n    console.log(skin);\r\n    let imports = [];\r\n    imports.push(import('./../styles/common.css'));\r\n    \r\n    if(skin !== 'none') {\r\n        imports.push(import('./../styles/default.css'));\r\n    }\r\n\r\n    return imports;\r\n}\r\n\r\nexport {\r\n    importStyles\r\n}","import React, { Component } from 'react';\r\n\r\nimport Paginator from './Paginator';\r\nimport Header from './Header';\r\nimport Column from './Column';\r\nimport Cell from './Cell';\r\nimport ExpandableCell from './ExpandableCell';\r\nimport { _styles } from './plugins/all'\r\n\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass Grid extends Component {\r\n    displayName = Grid.name\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedKeys: [],\r\n            selectedItems: [],\r\n            selectedLast: null\r\n        }\r\n\r\n        this.toggleSelectRow = this.toggleSelectRow.bind(this);\r\n        this.renderRows = this.renderRows.bind(this);\r\n     \r\n        _styles.importStyles(this.props.skin);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.skin !== this.props.skin) {\r\n            _styles.importStyles(this.props.skin);\r\n        }\r\n    }\r\n\r\n    toggleSelectRow(event, key) {\r\n\r\n        let isCtrl = event.ctrlKey;\r\n        let isShift = event.shiftKey;\r\n\r\n        if (isCtrl || isShift) {\r\n            event.preventDefault(); // this works everywhere, except IE\r\n            document.getSelection().removeAllRanges(); // hack for IE\r\n        }\r\n\r\n        var newSelectedKeys = [];\r\n        var newSelectedItems = [];\r\n\r\n        // keep existing values if Ctrl is pressed\r\n        if (isCtrl) {\r\n            newSelectedKeys = this.state.selectedKeys.slice();\r\n            newSelectedItems = this.state.selectedItems.slice();\r\n        }\r\n\r\n        let keyStart = key;\r\n        let keyEnd = key;\r\n\r\n        if (isShift) {\r\n            let currentKeys = [];\r\n            this.props.data.forEach((item) => {\r\n                currentKeys.push(item[this.props.keyField]);\r\n            });\r\n            let posStart = currentKeys.indexOf(this.state.selectedLast);\r\n            let posEnd = currentKeys.indexOf(keyStart);\r\n\r\n            if (posStart < posEnd) {\r\n                keyStart = this.state.selectedLast;\r\n            }\r\n            else {\r\n                keyEnd = this.state.selectedLast;\r\n            }\r\n        };\r\n\r\n        let update = false;\r\n        this.props.data.forEach((item) => {\r\n\r\n            if (item.Code === keyStart)\r\n                update = true;\r\n\r\n            if (update) {\r\n                if (newSelectedKeys.indexOf(item.Code) === -1) {\r\n                    newSelectedKeys.push(item.Code);\r\n                    newSelectedItems.push(item);\r\n                }\r\n                else {\r\n                    newSelectedKeys = newSelectedKeys.filter((code) => {\r\n                        return code !== item.Code;\r\n                    })\r\n                    if (this.props.keyField) {\r\n                        newSelectedItems = newSelectedItems.filter((selItem) => {\r\n                            return selItem[this.props.keyField] !== item.key;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (item.Code === keyEnd) {\r\n                update = false;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            selectedKeys: newSelectedKeys,\r\n            selectedItems: newSelectedItems,\r\n            selectedLast: key\r\n        });\r\n\r\n        this.props.onSelectChanged(newSelectedKeys, newSelectedItems);\r\n    }\r\n\r\n    renderRows(children) {\r\n        let noData = !this.props.data || (this.props.data.length === 0);\r\n\r\n        if (this.props.loading && noData) {\r\n            return (\r\n                <tr key=\"loading\">\r\n                    <td colSpan={this.props.children.length + (this.props.isExpandable ? 1 : 0)} align=\"center\" className=\"bold\">\r\n                        <FontAwesomeIcon icon={faSync} className=\"fa-spin mr-3\" /> Loading data ...\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        else {\r\n            if (noData) {\r\n                return (\r\n                    <tr key=\"empty\">\r\n                        <td colSpan={this.props.children.length + (this.props.isExpandable ? 1 : 0)} align=\"center\">\r\n                            {this.props.emptyText}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            }\r\n            else {\r\n                return this.props.data.map((item, index) => {\r\n                    let key = this.props.keyField ? item[this.props.keyField] : index;\r\n                    let classNames = [];\r\n                    classNames.push(this.props.classNameRowRenderer(item));\r\n                    let onMouseOver = () => { };\r\n                    let onMouseOut = () => { };\r\n                    let onMouseDown = () => { };\r\n                    let onClick = () => { };\r\n                    let isSelected = false;\r\n\r\n                    if (this.props.enableSelection) {\r\n                        isSelected = (this.state.selectedKeys.indexOf(key) !== -1);\r\n                        if (!isSelected) {\r\n                            onMouseOver = (event) => {\r\n                                let tr = event.currentTarget;\r\n                                tr.classList.add(\"grid-selected\");\r\n                            }\r\n                            onMouseOut = (event) => {\r\n                                let tr = event.currentTarget;\r\n                                tr.classList.remove(\"grid-selected\");\r\n                            }\r\n                        }\r\n                        onMouseDown = (event) => {\r\n                            if (event.ctrlKey || event.shiftKey) {\r\n                                event.preventDefault();\r\n                            }\r\n                        }\r\n                        onClick = (event) => this.toggleSelectRow(event, key, item);\r\n                    }\r\n\r\n                    if (isSelected) {\r\n                        classNames.push(\"grid-selected\");\r\n                    }\r\n\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <tr\r\n                                className={classNames.join(' ')}\r\n                                onClick={onClick}\r\n                                onMouseDown={onMouseDown}\r\n                                onMouseOver={onMouseOver}\r\n                                onMouseOut={onMouseOut}>\r\n                                <ExpandableCell className=\"text-center\" dataItem={item} isVisible={this.props.isExpandable} isExpanded={item.isExpanded} onExpand={\r\n                                    (dataItem) => {\r\n                                        item.isExpanded = !item.isExpanded;\r\n                                        var dataCopy = Object.assign({}, this.props.data);\r\n                                        dataCopy.dataItems = dataCopy.dataItems.slice();\r\n                                        dataCopy.items[key].isExpanded = !dataCopy.items[key].isExpanded;\r\n                                        this.setState({ data: !this.state.dataCopy });\r\n                                    }\r\n                                } />\r\n                                {React.Children.map(children, (child, i) => {\r\n                                    return (<Cell {...child.props} data={item} onCellClick={this.props.onCellClick} emptyPlaceholder={this.props.emptyPlaceholder} />);\r\n                                })}\r\n                            </tr>\r\n                            {\r\n                                this.props.isExpandable && item.isExpanded &&\r\n                                <tr style={{ 'backgroundColor': '#fff' }}>\r\n                                    <td> </td>\r\n                                    <td colSpan={this.props.children.length}>\r\n                                        {React.cloneElement(this.props.SubGrid(item), { data: item })}\r\n                                    </td>\r\n                                </tr>\r\n                            }\r\n                        </React.Fragment>\r\n                    );\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageChange(newPage) {\r\n        this.props.onStateChanged({\r\n            pageSize: this.props.pageSize,\r\n            pageNr: newPage,\r\n            orderBy: this.props.orderBy,\r\n            orderDir: this.props.orderDir\r\n        });\r\n    }\r\n\r\n    handleSortChange(newOrderBy, neworderDir) {\r\n        this.props.onStateChanged({\r\n            pageSize: this.props.pageSize,\r\n            pageNr: 1,\r\n            orderBy: newOrderBy,\r\n            orderDir: neworderDir\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const children = [];\r\n        const validType = (child) => { return React.isValidElement(child) && (child.type === Column) };\r\n\r\n        // allow only valid Columns in main collection and inside it (in case we have an empty container)\r\n        React.Children.toArray(this.props.children).map(child => {\r\n            if (validType(child)) {\r\n                children.push(child);\r\n            }\r\n            else {\r\n                if (React.isValidElement(child) && child.props.children) {\r\n                    React.Children.toArray(child.props.children).map((subChild) => {\r\n                        if (validType(subChild)) {\r\n                            children.push(subChild);\r\n                        };\r\n\r\n                        return null;\r\n                    });\r\n                }\r\n            };\r\n\r\n            return null;\r\n        });\r\n\r\n        let noData = !this.props.gridData || !this.props.gridData.dataItems || (this.props.gridData.dataItems.length === 0);\r\n\r\n        return (\r\n            <div className={`digital-grid-wrapper ${this.props.skin? `skin-${this.props.skin}`: ``}`}>\r\n                <table className={this.props.className + ' digital-grid'} style={{ 'opacity': (this.props.loading && !noData) ? 0.4 : 1 }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key='emptyHeader' style={(this.props.isExpandable && children.length >= 1) ? {} : { 'display': 'none' }}></th>\r\n                            {React.Children.map(children, (child, i) => {\r\n                                return <Header {...child.props} orderBy={this.props.orderBy} key={i} orderDir={this.props.orderDir} onSortChanged={(orderBy, orderDir) => this.handleSortChange(orderBy, orderDir)} />;\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderRows(children)}\r\n                    </tbody>\r\n                </table>\r\n                {\r\n                    this.props.enableSelection && this.props.showSelectionInfo &&\r\n                    <div className=\"text-info p-3\">\r\n                        [icon:info]\r\n                        <small>\r\n                            Row selection is enabled.<br />\r\n                            Multiselect is also enabled by using the Shift and/or Ctrl keys.\r\n                        </small>\r\n                    </div>\r\n                }\r\n                {\r\n                    ((this.props.dataCount > this.props.data.length) && (this.props.pageSize > 0)) &&\r\n                    <Paginator\r\n                        pageNr={this.props.pageNr}\r\n                        pageSize={this.props.pageSize}\r\n                        dataCount={this.props.dataCount}\r\n                        onPageChanged={(page) => this.handlePageChange(page)}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGrid.defaultProps = {\r\n    skin: 'default',\r\n    className: '',\r\n    classNameRowRenderer: () => { },\r\n\r\n    onStateChanged: () => { },\r\n    enableSelection: false,\r\n    onSelectChanged: () => { },\r\n    showSelectionInfo: true,\r\n    \r\n    data: [],\r\n    dataCount: 0,\r\n    pageNr: 1,\r\n    pageSize: 0,\r\n    orderBy: '?',\r\n    orderDir: 'ASC',\r\n    emptyText: \"No data available!\",\r\n    isExpandable: false,\r\n    SubGrid: () => { return <></>; }\r\n}\r\n\r\nexport { Grid, Column };","import React from 'react';\r\nimport { Grid, Column } from 'react-digital-grid';\r\n\r\nconst Simple = () => {\r\n  const data = [\r\n    { Id: 1, FirstName: 'George', LastName: 'Miscalencu' },\r\n    { Id: 2, FirstName: 'John', LastName: 'Doe' }\r\n  ];\r\n\r\n  return (\r\n    <Grid data={data}>\r\n      <Column header='Id' field='Id'></Column>\r\n      <Column header='First Name' field='FirstName'></Column>\r\n      <Column header='Last Name' field='LastName'></Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Simple;\r\n","function get(options, feedback) {\r\n    options = options || {};\r\n    feedback = feedback || (() => {});\r\n    \r\n    if(!options.url) {\r\n        console.error('_data.get: missing Url');\r\n    }\r\n\r\n    let total = null;\r\n\r\n    fetch(options.url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(options.orderBy && options.orderDir) {\r\n                data = sort(data, options.orderBy, options.orderDir)\r\n            }\r\n\r\n            if(options.pageNr && options.pageSize) {\r\n                let _filter = filter(data, options.pageNr, options.pageSize);\r\n                data = _filter.data;\r\n                total = _filter.total;\r\n            }\r\n\r\n            feedback(data, total);\r\n        });\r\n}\r\n\r\nfunction sort(arr, sortBy, sortDir) {\r\n    return arr.sort((a, b) => {\r\n        let aVal = a[sortBy] ? a[sortBy] : \"-\";\r\n        let bVal = b[sortBy] ? b[sortBy] : \"-\";\r\n\r\n        let val = 0;\r\n        if (aVal > bVal)\r\n            val = (sortDir === \"ASC\") ? 1 : -1;\r\n        if (aVal < bVal)\r\n            val = (sortDir === \"ASC\") ? -1 : 1;\r\n\r\n        return val;\r\n    });\r\n}\r\n\r\nfunction filter(arr, pageNr, pageSize) {\r\n    let offset = (pageNr - 1) * pageSize;\r\n    let paginatedItems = arr.slice(offset).slice(0, pageSize);\r\n    let pages = Math.ceil(arr.length / pageSize);\r\n    return {\r\n        total: arr.length,\r\n        pages: pages,\r\n        data: paginatedItems\r\n    };\r\n}\r\n\r\nexport { \r\n    get    \r\n}","import React, { Component } from 'react';\r\nimport { Grid, Column } from 'react-digital-grid';\r\nimport { _data } from 'scripts/all';\r\n\r\nexport default class Full extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            data: [],\r\n            count: null,\r\n            pageSize: 10,\r\n            pageNr: 1,\r\n            skin: 'default',\r\n\r\n            skins: [\r\n                {val: '', text: 'None'}, \r\n                {val: 'default', text: 'Default Skin'}\r\n            ]\r\n        };\r\n\r\n        this.loadData = this.loadData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData(this.state.pageSize, this.state.pageNr);\r\n    }\r\n\r\n    loadData(pageSize, pageNr, orderBy, orderDir) {\r\n        this.setState({ \r\n            loading: true \r\n            },\r\n            _data.get({\r\n                url: '/data/generated.json',\r\n                pageNr: pageNr,\r\n                pageSize: pageSize,\r\n                orderBy: orderBy,\r\n                orderDir: orderDir\r\n            }, (data, count) => {\r\n                this.setState({\r\n                    data: data,\r\n                    loading: false,\r\n                    dataCount: count,\r\n                    pageNr: pageNr,\r\n                    pageSize: pageSize,\r\n                    orderBy: orderBy,\r\n                    orderDir: orderDir\r\n                })\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"form\">\r\n                    <div className=\"form-group\">\r\n                        <label>Skin</label>\r\n                        <select \r\n                            value={this.state.skin}\r\n                            onChange={(e) => this.setState({'skin': e.target.value})}>\r\n                            {\r\n                                this.state.skins.map(option => {\r\n                                  return (\r\n                                        <option key={option.val} value={option.val}>{option.text}</option>\r\n                                  );  \r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <Grid \r\n                    id=\"full\"\r\n                    skin={this.state.skin}\r\n                    loading={this.state.loading}\r\n                    emptyText=\"No data to display at this point.\"\r\n                    data={this.state.data}\r\n                    dataCount={this.state.dataCount}\r\n                    pageNr={this.state.pageNr}\r\n                    pageSize={this.state.pageSize}\r\n                    orderBy={this.state.orderBy}\r\n                    orderDir={this.state.orderDir}\r\n                    onStateChanged={(newState) => this.loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)}>\r\n                        <Column header=\"Picture\" field=\"picture\" className=\"center\" renderer={(item) => {\r\n                            return (\r\n                                <img src={item.picture} className=\"profilepic\" alt={item.name} />\r\n                            );\r\n                        }}>\r\n                        </Column>\r\n                        <Column header=\"Name\" field=\"name\" className=\"bold\" sortable={true}></Column>\r\n                        <Column header=\"Gender\" field=\"gender\"></Column>\r\n                        <Column header=\"Eye Color\" field=\"eyeColor\"></Column>\r\n                        <Column header=\"Age\" field=\"age\" className=\"bold\" sortable={true}></Column>\r\n                        <Column header=\"Address\" field=\"address\" className=\"italic\"></Column>\r\n                        <Column header=\"Phone\" field=\"phone\"></Column>\r\n                </Grid>\r\n            </>\r\n        );\r\n    };\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class MainMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                <li><a href=\"/\">Home</a></li>\r\n                <li>Basic Features\r\n                    <ul>\r\n                        <li><a href=\"/simple\">Simple</a></li>\r\n                        <li><a href=\"/templates\">Templates</a></li>\r\n                        <li><a href=\"/paging\">Paging</a></li>\r\n                        <li><a href=\"/sorting\">Sorting</a></li>\r\n                    </ul>    \r\n                </li>\r\n                <li>Advanced Features\r\n                    <ul>\r\n                        <li><a href=\"/events\">Events</a></li>\r\n                        <li><a href=\"/selection\">Selection</a></li>\r\n                        <li><a href=\"/expand\">Expandable content</a></li>\r\n                    </ul>    \r\n                </li>\r\n                <li><a href=\"/full\">Full Features</a></li>\r\n            </ul>\r\n        );\r\n    };\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './styles/app.css';\n\nimport Home from './components/Home';\nimport Simple from './components/Simple';\nimport Full from './components/Full';\nimport MainMenu from 'components/_common/MainMenu';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"header\"><span>Digital</span> Grid Examples</div>\n      <div className=\"main_container\">\n        <div className=\"left\"><MainMenu /></div>\n        <div className=\"main\">\n          <BrowserRouter>\n              <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/simple\" component={Simple} />\n                  <Route path=\"/full\" component={Full} />\n              </Switch>\n            </BrowserRouter>\n        </div>\n      </div>\n      <div className=\"footer\">Digital Grid Examples</div>\n    </div>\n  );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}