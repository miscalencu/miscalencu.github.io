{"version":3,"sources":["components/home.jsx","components/_common/pageLink.jsx","components/_common/mainMenu.jsx","components/notFound.jsx","components/_common/pageRedirect.jsx","digital-grid/paginator.jsx","digital-grid/header.jsx","digital-grid/column.jsx","digital-grid/cell.jsx","digital-grid/expandableCell.jsx","digital-grid/plugins/styles.js","digital-grid/plugins/selection.js","digital-grid/plugins/expandable.js","digital-grid/plugins/all.js","digital-grid/grid.jsx","components/examples/simple.jsx","components/examples/skins.jsx","components/examples/expandable.jsx","scripts/data.js","components/examples/full.jsx","components/examples.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","PageLink","params","href","process","to","children","MainMenu","NotFound","style","textAlign","padding","color","icon","faUnlink","size","PageRedirect","url","document","location","Paginator","maximumNumberOfPageButtons","currentPage","this","props","pageNr","pageSize","dataCount","totalNumberOfPages","Math","ceil","currentPageNumber","firstPageButton","number","enabled","previousPageButton","nextPageButton","lastPageButton","displayResultsFrom","displayResultsTo","min","displayResultsTotal","pageNumber","onPageChanged","model","computeModel","className","classNames","first","disabled","onClick","changePage","faAngleDoubleLeft","prev","faAngleLeft","page","next","faAngleRight","last","faAngleDoubleRight","Component","defaultProps","Header","toolTip","headerClassName","sortable","title","styles","field","orderBy","orderDir","faCaretDown","faCaretUp","faSort","class","isCurrent","onSortChanged","handleSortChange","header","renderHeaderContent","Column","isClickable","Cell","data","valPlain","valFormatted","renderer","ev","dataItem","preventDefault","handleOnClick","emptyPlaceholder","renderCell","ExpandableCell","isVisible","isExpanded","onExpand","cursor","faMinusSquare","faPlusSquare","plugin","name","activate","grid","state","prevState","Object","assign","skin","imports","push","gridClassNames","args","onRowClick","event","item","keyField","selectionResult","key","isCtrl","ctrlKey","isShift","shiftKey","getSelection","removeAllRanges","newSelectedKeys","newSelectedItems","selectedKeys","slice","selectedItems","keyStart","keyEnd","currentKeys","forEach","posStart","indexOf","selectedLast","posEnd","update","filter","selItem","toggleSelectRow","setState","onSelectionChange","isSelectable","console","error","isSelected","onRowMouseOver","currentTarget","classList","add","onMouseOver","onRowMouseOut","remove","onMouseOut","onRowMouseDown","onMouseDown","rowClassNames","addIsExpandedColumn","isExpandable","map","plugins","_styles","_selection","_expandable","preservePriorEvents","alteredState","newState","eventToPreserve","initAll","mixedState","Grid","buidState","classNamesRenderer","footerText","prevProps","JSON","stringify","_state","index","Fragment","join","rowContent","colSpan","length","React","cloneElement","expandedRowContent","getColumns","copyItems","Children","child","i","onCellClick","columns","emptyText","loading","noData","align","faSync","itemContent","newPage","onStateChange","newOrderBy","neworderDir","validType","isValidElement","type","toArray","subChild","wrapperClassNames","opacity","display","column","renderRows","handlePageChange","showSelectionInfo","faInfoCircle","zoom","paddingRight","float","Simple","Id","FirstName","LastName","Email","Age","Skins","useState","setSkin","value","onChange","e","target","val","text","option","Expandable","Column1","Column2","row","get","options","feedback","total","fetch","then","response","json","arr","sortBy","sortDir","sort","a","b","aVal","bVal","_filter","offset","paginatedItems","pages","Full","count","skins","gridInfo","loadData","bind","_data","id","maxWidth","overflow","textOverflow","src","picture","height","alt","Examples","Example","code","setCode","match","example","content","clear","language","tomorrowNight","App","path","exact","component","Boolean","window","hostname","Router","HashRouter","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9658f849.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return <h1>Home here</h1>;\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageLink = (params) => {\n    // use this way of generating the links for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    return (\n        <>\n            {useHash && <a href={`${process.env.PUBLIC_URL}/#${params.to}`}>{params.children}</a>}\n            {!useHash && <Link to={params.to}>{params.children}</Link>}\n        </>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport PageLink from './pageLink';\n\nconst MainMenu = () => {\n  return (\n    <ul>\n      <li>\n        <PageLink to={`/`}>Home</PageLink>\n      </li>\n      <li>\n        Basic Features\n        <ul>\n          <li>\n            <PageLink to={`/examples/simple`}>Simple</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/skins`}>Skins</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/paging`}>Paging</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/sorting`}>Sorting</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Advanced Features\n        <ul>\n          <li>\n            <PageLink to={`/events`}>Events</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/selection`}>Selection</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/expandable`}>Expandable content</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/full`}>Full Features</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <PageLink to={`/documentation`}>Documentation</PageLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>404 - Page Not Found</h1>\n      <div style={{ padding: '10px' }}>\n        <h2>Oops! Page not found!</h2>\n        <FontAwesomeIcon color=\"#c00\" icon={faUnlink} size=\"9x\" />\n      </div>\n      <br />\n      <div>\n        <Link to='/'>Go Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst PageRedirect = (params) => {\n    // use this way of redirecting for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    if(useHash) {\n         const url = `${process.env.PUBLIC_URL}/#${params.to}`;\n         document.location.href = url;\n         return null; \n    }\n\n    return (\n        <>\n            {!useHash && <Redirect to={params.to}></Redirect>}\n        </>\n    )\n}\n\nexport default PageRedirect;","import React, { Component } from 'react';\n\nimport {\n  faAngleDoubleLeft,\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\n\nexport default class Paginator extends Component {\n  maximumNumberOfPageButtons = 11;\n\n  computeModel() {\n    let currentPage = this.props.pageNr;\n    let pageSize = this.props.pageSize;\n    let dataCount = this.props.dataCount;\n    let totalNumberOfPages = Math.ceil(dataCount / pageSize);\n\n    return {\n      currentPageNumber: currentPage,\n      totalNumberOfPages: totalNumberOfPages,\n      firstPageButton: {\n        number: 1,\n        enabled: currentPage > 1\n      },\n      previousPageButton: {\n        number: currentPage > 1 ? currentPage - 1 : 1,\n        enabled: currentPage > 1\n      },\n      nextPageButton: {\n        number: currentPage < totalNumberOfPages ? currentPage + 1 : totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      lastPageButton: {\n        number: totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      displayResultsFrom: dataCount === 0 ? 0 : pageSize * (currentPage - 1) + 1,\n      displayResultsTo:\n        dataCount === 0 ? 0 : Math.min(pageSize * (currentPage - 1) + pageSize, dataCount),\n      displayResultsTotal: dataCount\n    };\n  }\n\n  changePage(pageNumber) {\n    this.props.onPageChanged(pageNumber);\n  }\n\n  render() {\n    var model = this.computeModel();\n    return (\n      <ul className='pagination'>\n        <li className={classNames({ first: true, 'page-item': true, disabled: !model.firstPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.firstPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleDoubleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ prev: true, 'page-item': true, disabled: !model.previousPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.previousPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ page: true, 'page-item': true })}>\n          <span className='nowrap page-link'>\n            Page {model.currentPageNumber} of {model.totalNumberOfPages}\n          </span>\n        </li>\n\n        <li className={classNames({ next: true, 'page-item': true, disabled: !model.nextPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.nextPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleRight} />\n          </span>\n        </li>\n        <li className={classNames({ last: true, 'page-item': true, disabled: !model.lastPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.lastPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </span>\n        </li>\n        <li className='right page-item'>\n          <span className='page-link'>\n            Displaying results {model.displayResultsFrom} - {model.displayResultsTo} of{' '}\n            {model.displayResultsTotal}\n          </span>\n        </li>\n      </ul>\n    );\n  }\n}\n\nPaginator.defaultProps = {\n  onPageChanged: () => {}\n};\n","import React from 'react';\nimport { faCaretDown, faCaretUp, faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Header = ({\n  toolTip = '',\n  classNames = '',\n  headerClassName = '',\n  sortable = false,\n  ...props\n}) => {\n  const handleSortChange = () => {\n    let isCurrent = props.field === props.orderBy;\n    props.onSortChanged(\n      props.field,\n      !isCurrent ? 'ASC' : props.orderDir === 'ASC' ? 'DESC' : 'ASC'\n    );\n  };\n\n  const renderHeaderContent = () => {\n    if (sortable) {\n      const styles = {\n        icon:\n          props.field === props.orderBy\n            ? props.orderDir === 'DESC'\n              ? faCaretDown\n              : faCaretUp\n            : faSort,\n        class: props.field === props.orderBy ? 'active' : 'inactive'\n      };\n\n      return (\n        <table className='grid-sort-link' onClick={() => handleSortChange()}>\n          <tbody>\n            <tr>\n              <td className='pr5'>{props.header}</td>\n              <td className='align-middle'>\n                <FontAwesomeIcon icon={styles.icon} className={styles.class} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    } else {\n      return props.header;\n    }\n  };\n\n  return (\n    <th\n      className={`${props.className} grid-header-cell ${headerClassName}`}\n      title={\n        toolTip +\n        (toolTip && sortable ? '\\n' : '') +\n        (sortable ? 'Click to sort this using value!' : '')\n      }\n    >\n      <div className='gridHeader'>{renderHeaderContent()}</div>\n    </th>\n  );\n};\n\nexport default Header;\n\nHeader.defaultProps = {\n  className: ''\n}\n","const Column = ({ isClickable = false }) => {\n  return;\n};\n\nexport default Column;\n","import React from 'react';\n\nexport default function Cell(props) {\n  const renderCell = () => {\n    const handleOnClick = (field, valPlain, dataItem, ev) => {\n      props.onClick(field, valPlain, dataItem);\n      ev.preventDefault();\n    };\n\n    let data = props.data;\n    let valPlain = data[props.field];\n\n    let valFormatted = valPlain;\n    if (props.renderer) {\n      valFormatted = props.renderer(data);\n    }\n\n    if (props.isClickable && (valPlain !== '' || props.renderer)) {\n      valFormatted = (\n        <span class='link' onClick={ev => handleOnClick(props.field, valPlain, data, ev)}>\n          {valFormatted}\n        </span>\n      );\n    }\n\n    if (valFormatted === '') {\n      if (props.emptyPlaceholder !== '') valFormatted = props.emptyPlaceholder;\n    }\n\n    return valFormatted;\n  };\n\n  return (\n    <td className={props.className}>\n      {renderCell()}\n      {props.children}\n    </td>\n  );\n}\n\nCell.defaultProps = {\n  onClick: () => {}\n};\n","import React from 'react';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ExpandableCell = ({ isVisible = false, isExpanded = false, onExpand = () => {} }) => {\n  return (\n    isVisible && (\n      <td>\n        <span style={{ cursor: 'pointer' }} onClick={onExpand}>\n          <FontAwesomeIcon icon={isExpanded ? faMinusSquare : faPlusSquare} />\n        </span>\n      </td>\n    )\n  );\n};\n\nexport default ExpandableCell;\n","var plugin = function(grid, state, props) {\n    \n    const activate = function(grid, props, state) {\n        let prevState = Object.assign({}, state);\n        let { skin } = grid.props;\n        \n        // TO DO: import only once, using localStorage\n        // TO DO: import based on the supplied style\n        let imports = [];\n        imports.push(import('./../styles/common.css'));\n        \n        if(skin !== 'none') {\n            imports.push(import('./../styles/default.css'));\n        }\n\n        const gridClassNames = (args) => {\n            let classNames = prevState.gridClassNames(args);\n            let { skin } = grid.props;\n            if(skin === 'bootstrap') {\n                // add the 'table' class to the existing ones\n                classNames.push('table');\n            }\n            return classNames;\n        };\n    \n        // this plugin does not alter the state, just includes the css file\n        return {\n            gridClassNames: (args) => gridClassNames(args)\n        };\n    };\n\n    return {\n        name: \"Style Plugin\",\n        enabled: true,\n        activate: activate,\n    };\n\n}();\n\nexport {\n    plugin\n}","var plugin = function() {\n    const name = \"Selection Plugin\";\n    const activate = function(grid, props, state) {\n\n        let prevState = Object.assign({}, state);\n\n        if(!props.isSelectable)\n            return {};\n\n        const { keyField } = props;\n\n        if(!keyField) {\n            console.error(`DIGITAL GRID - You cannot use PLUGIN ${name} when you don't have a keyField defined.`)\n        }\n        \n        const isSelected = (item) => {\n            return grid.state.selectedKeys.indexOf(item[keyField]) !== -1\n        };\n\n        const rowClassNames = (args) => {\n            let { item } = args;\n            let classNames = prevState.rowClassNames(args);\n            if(isSelected(item)) {\n                // add the 'grid-selected' class to the existing ones\n                classNames.push('grid-selected');\n            }\n            return classNames;\n        };\n        const onMouseOver = (args) => {\n            let { event, item } = args;\n            if(!isSelected(item)) {\n                let tr = event.currentTarget;\n                tr.classList.add('grid-selected');\n                }\n            }\n            const onMouseOut = (args) => {\n            let { event, item } = args;\n            if(!isSelected(item)) {\n                let tr = event.currentTarget;\n                tr.classList.remove('grid-selected');\n            }\n        };\n        const onMouseDown = (args) => {\n            let { event } = args;\n            if (event.ctrlKey || event.shiftKey) {\n                event.preventDefault();\n            }\n        };\n\n        return {\n            selectedKeys: [],\n            selectedItems: [],\n            selectedLast: null,\n            onRowClick: (args) => onRowClick(args),\n            onRowMouseOver: (args) => onMouseOver(args),\n            onRowMouseOut: (args) => onMouseOut(args),\n            onRowMouseDown: (args) => onMouseDown(args),\n            rowClassNames : (args) => rowClassNames(args)\n        };\n    };\n\n    let onRowClick = (args) => {\n        let { event, item, grid } = args;\n        let { keyField } = grid.props;\n        let key = keyField ? item[keyField] : 0;\n\n        let selectionResult = toggleSelectRow(event, key, grid.props, grid.state);\n        grid.setState(selectionResult);\n\n        if(grid.props.onSelectionChange)\n            grid.props.onSelectionChange(selectionResult.selectedKeys, selectionResult.selectedItems, selectionResult.selectedLast);\n    }\n\n    function toggleSelectRow(event, key, props, state) {\n        let isCtrl = event.ctrlKey;\n        let isShift = event.shiftKey;\n        \n        if (isCtrl || isShift) {\n            event.preventDefault(); // this works everywhere, except IE\n            document.getSelection().removeAllRanges(); // hack for IE\n        }\n\n        var newSelectedKeys = [];\n        var newSelectedItems = [];\n\n        // keep existing values if Ctrl is pressed\n        if (isCtrl) {\n            newSelectedKeys = state.selectedKeys.slice();\n            newSelectedItems = state.selectedItems.slice();\n        }\n\n        let keyStart = key;\n        let keyEnd = key;\n\n        if (isShift) {\n            let currentKeys = [];\n            props.data.forEach(item => {\n                currentKeys.push(item[props.keyField]);\n            });\n            let posStart = currentKeys.indexOf(state.selectedLast);\n            let posEnd = currentKeys.indexOf(keyStart);\n\n            if (posStart < posEnd) {\n                keyStart = state.selectedLast;\n            } else {\n                keyEnd = state.selectedLast;\n            }\n        }\n\n        let update = false;\n        props.data.forEach(item => {\n            if (item[props.keyField] === keyStart) \n                update = true;\n\n            if (update) {\n                if (newSelectedKeys.indexOf(item[props.keyField]) === -1) {\n                    newSelectedKeys.push(item[props.keyField]);\n                    newSelectedItems.push(item);\n                } else {\n                    newSelectedKeys = newSelectedKeys.filter(key => {\n                        return key !== item[props.keyField];\n                    });\n                    if (props.keyField) {\n                        newSelectedItems = newSelectedItems.filter(selItem => {\n                        return selItem[props.keyField] !== item.key;\n                        });\n                    }\n                }\n            }\n\n            if (item[props.keyField] === keyEnd) {\n                update = false;\n            }\n        });\n\n        return {\n            selectedKeys: newSelectedKeys,\n            selectedItems: newSelectedItems,\n            selectedLast: key    \n        }\n    };\n\n    return {\n        name: name,\n        enabled: true,\n        activate: activate\n    };\n}();\n\nexport {\n    plugin\n}","var plugin = function() {\n    const activate = function(grid, props, state) {\n        return {\n            data: addIsExpandedColumn(props)\n        };\n    };\n\n    const addIsExpandedColumn = function(props) {\n        return props.isExpandable ? props.data.map(item => ({ ...item, isExpanded: false })) : props.data;\n    };\n\n    return {\n        name: \"Expandable Plugin\",\n        enabled: true,\n        activate: activate\n    };\n\n}();\n\nexport {\n    plugin\n}","import * as _styles from './styles';\nimport * as _selection from './selection'\nimport * as _expandable from './expandable'\n\nvar plugins = function() {\n\n    let plugins = [\n        _styles.plugin,\n        _selection.plugin,\n        _expandable.plugin\n    ];\n\n    var initAll = function(grid, state) {        \n        // extract props and state from initial grid\n        let { props } = grid;\n        // alter state by each plugin\n        plugins.forEach(plugin => {\n            if(plugin.enabled) {\n                // get the new state values form plugin\n                let alteredState = plugin.activate(grid, props, state);\n                // preserve inital events from prior plugins or default functionality\n                let mixedState = preservePriorEvents(alteredState, state);\n                // return new state object to main component\n                state = Object.assign(state, mixedState);\n            }\n        });\n\n        // return final state\n        return state;\n    };\n\n    var preservePriorEvents = function(alteredState, state) {\n        let newState = Object.assign({}, alteredState);\n        let prevState = Object.assign({}, state);\n        \n        let eventsToPreserve = [\n            'onRowClick',\n            'onRowMouseOver',\n            'onRowMouseOut',\n            'onRowMouseDown'\n        ];\n\n        eventsToPreserve.forEach(eventToPreserve => {\n            if(newState[eventToPreserve]) {\n                alteredState[eventToPreserve] = (args) => {\n                    prevState[eventToPreserve](args);\n                    newState[eventToPreserve](args);\n                };\n            }\n        });\n\n        // return final state with prior events preserved\n        return alteredState;\n    }\n\n    return {\n        initAll: initAll\n    };\n}();\n\nexport {\n    plugins\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paginator from './paginator';\nimport Header from './header';\nimport Column from './column';\nimport Cell from './cell';\nimport ExpandableCell from './expandableCell';\n\nimport { faSync, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { plugins } from './plugins/all';\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    // set final state\n    this.state = this.buidState(props);\n  }\n\n  buidState(props) {\n    // prepare default state variable\n    // all these items can be altered by the plugins\n    let state = {\n      data: props.data,                               // data that will be displayed by the grid\n\n      onRowClick : () => {},                          // event invoked when a row is clicked\n      onRowMouseOver: () => {},\n      onRowMouseOut: () => {},\n      onRowMouseDown: () => {},\n      rowClassNames: (args) => props.classNamesRenderer(args),\n      gridClassNames: () => { return ['digital-grid']; },\n      footerText: props.footerText\n    };\n\n    // enable plugins that change initial state\n    return plugins.initAll(this, state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // refresh the state every time there is new data sent\n    if(JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      let _state = this.buidState(this.props);\n      // reset state if different\n      if(JSON.stringify(_state) !== JSON.stringify(prevState)) {\n        this.setState(_state);\n      }\n    }\n  }\n\n  itemContent(item, index) {\n\n    // TO DO: document this as row events parameters /issues/16\n    let params = {\n      item: item, \n      grid: this\n    };\n\n    const { keyField, isExpandable } = this.props;\n    let key = keyField ? item[keyField] : index;\n    let classNames = this.state.rowClassNames(params);\n    \n    return (\n      <React.Fragment \n        key={key}>\n        <tr\n          className={classNames.join(' ')}\n          onClick={(event) => this.state.onRowClick({ event:event, ...params })}\n          onMouseDown={(event) => this.state.onRowMouseDown({ event:event, ...params })}\n          onMouseOver={(event) => this.state.onRowMouseOver({ event:event, ...params })}\n          onMouseOut={(event) => this.state.onRowMouseOut({ event:event, ...params })}>\n          {this.rowContent(item)}\n        </tr>\n        { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n        {isExpandable && item.isExpanded && (\n          <tr>\n            <td> </td>\n            <td colSpan={this.props.children.length}>\n              {React.cloneElement(this.props.expandedRowContent(item), {\n                data: item\n              })}\n            </td>\n          </tr>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  rowContent(item) {\n\n    let children = this.getColumns();\n    const { isExpandable } = this.props;\n    const { data } = this.state;\n\n    return (\n      <>\n        { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n        <ExpandableCell\n          isVisible={isExpandable}\n          isExpanded={item.isExpanded}\n          onExpand={() => {\n            const copyItems = [...data];\n            const index = copyItems.indexOf(item);\n            copyItems[index] = { ...copyItems[index] };\n            copyItems[index].isExpanded = !copyItems[index].isExpanded;\n            this.setState({ data: copyItems });\n          }}\n        />\n        {React.Children.map(children, (child, i) => {\n          return (\n            <Cell\n              {...child.props}\n              data={item}\n              onCellClick={this.props.onCellClick}\n              emptyPlaceholder={this.props.emptyPlaceholder}\n            />\n          );\n        })}\n    </>\n    );\n  }\n\n  renderRows(columns) {\n    const { emptyText, isExpandable, loading } = this.props;\n    const { data } = this.state;\n    let noData = !data || data.length === 0;\n\n    if (loading && noData) {\n      return (\n        <tr key='loading'>\n          <td\n            colSpan={this.props.children.length + (isExpandable ? 1 : 0)}\n            align='center'\n            className='bold'>\n            <FontAwesomeIcon icon={faSync} className='fa-spin mr4' /> Loading data ...\n          </td>\n        </tr>\n      );\n    } else {\n      if (noData) {\n        return (\n          <tr key='empty'>\n            <td colSpan={this.props.children.length + (isExpandable ? 1 : 0)} align='center'>\n              { emptyText }\n            </td>\n          </tr>\n        );\n      } else {\n        return data.map((item, index) => {\n          return this.itemContent(item, index);\n        });\n      }\n    }\n  };\n\n  handlePageChange(newPage) {\n    this.props.onStateChange({\n      pageSize: this.props.pageSize,\n      pageNr: newPage,\n      orderBy: this.props.orderBy,\n      orderDir: this.props.orderDir\n    });\n  }\n\n  handleSortChange(newOrderBy, neworderDir) {\n    this.props.onStateChange({\n      pageSize: this.props.pageSize,\n      pageNr: 1,\n      orderBy: newOrderBy,\n      orderDir: neworderDir\n    });\n  }\n\n  getColumns() {\n    const children = [];\n    const validType = child => {\n      return React.isValidElement(child) && child.type === Column;\n    };\n\n    // allow only valid Columns in main collection and inside it (in case we have an empty container)\n    React.Children.toArray(this.props.children).map(child => {\n      if (validType(child)) {\n        children.push(child);\n      } else {\n        if (React.isValidElement(child) && child.props.children) {\n          React.Children.toArray(child.props.children).map(subChild => {\n            if (validType(subChild)) {\n              children.push(subChild);\n            }\n\n            return null;\n          });\n        }\n      }\n\n      return null;\n    });\n\n    return children;\n  }\n\n  render() {\n    //console.log(\"DIGITAL GRID - Rendering grid. loading:\", this.props.loading, ', data: ', this.state.data ? this.state.data.length: false);\n    let columns = this.getColumns();\n    let noData = !this.state.data || this.state.data.length === 0;\n    let wrapperClassNames = [ 'digital-grid-wrapper',  `skin-${this.props.skin}` ];\n    let gridClassNames = this.state.gridClassNames();\n    if(this.props.className)\n        gridClassNames.push(this.props.className)\n\n    return (\n      <div className={wrapperClassNames.join(' ')}>\n        <table\n          className={gridClassNames.join(' ')}\n          style={{ opacity: this.props.loading && !noData ? 0.4 : 1 }}>\n          <thead>\n            <tr>\n              { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n              <th\n                key='emptyHeader'\n                style={this.props.isExpandable && columns.length >= 1 ? {} : { display: 'none' }}>\n              </th>\n              {React.Children.map(columns, (column, i) => {\n                return (\n                  <Header\n                    {...column.props}\n                    orderBy={this.props.orderBy}\n                    key={i}\n                    orderDir={this.props.orderDir}\n                    onSortChanged={(orderBy, orderDir) => this.handleSortChange(orderBy, orderDir)}\n                  />\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>{this.renderRows(columns)}</tbody>\n        </table>\n        {this.props.dataCount > this.state.data.length && this.props.pageSize > 0 && (\n          <Paginator\n            pageNr={this.props.pageNr}\n            pageSize={this.props.pageSize}\n            dataCount={this.props.dataCount}\n            onPageChanged={page => this.handlePageChange(page)}\n          />\n        )}\n        {this.state.footerText}\n        {this.props.isSelectable && this.props.showSelectionInfo && (\n        <div className='pt10'>\n          <FontAwesomeIcon icon={faInfoCircle} style={{ zoom: 1.2, paddingRight: '5px', float: 'left' }} />\n          <div>\n              Row selection is enabled.\n              <br />\n              Multiselect is also enabled by using the Shift and/or Ctrl keys.\n          </div>\n        </div>\n        )}\n      </div>\n    );\n\n  }\n}\n\nGrid.defaultProps = {\n  emptyText: 'No data available!',              // Text to be displayed when there is no data to available. Defaults to 'No data available'\n  footerText: '',                               // Text to be displayed in the bottom of the grid. Defaults to '' (empty).\n  className: '',                                // Additional className of the grid table. Defaults to '' (empty).\n  classNamesRenderer: () => { return [] },      // Method to compute additional className for each row. Parameters: see row events parameters.\n  onCellClick: () => {},                        // Callback method to be called (if set) when clicking a column value.\n  emptyPlaceholder: '-',                        // Text to be displayed in each grid cell if the content is empty.\n\n  skin: 'default',                              // Skin of the grid. Can be: 'default', 'classic', 'bootstrap' or 'none'. Defalts to 'default'.\n\n  isSelectable: false,                          // Sets if the grid is selectable. It true, rows can be (multi)selected. Defaults for 'false'.\n  showSelectionInfo: true,                      // Sets if the selection info is displayed in the footer of the grid. Defaults for 'false'.\n  onSelectionChange: () => {},                  // Callback method called when the selection of the rows changed. Parameters: (selectedKeys, selectedItems, selectedLast)\n\n  isExpandable: false,                          // Sets if the grid is expandable. If 'true' will display in the first column a [+] sign that expands the current row. Defaults to 'false'.\n  expandedRowContent: () => { return null; },   // Method used to generate the content of an expanded column. Parameters: (item)\n\n  data: [],                                     // The data that the grid should display.\n  keyField: null,                               // The field name of the data elements that represents a unique key.\n  loading: false,                               // Sets if the grid should display a loading indicator. Defaults to 'false'.\n  dataCount: 0,                                 // The total records of the grid. This is not the count of the 'data' array, but total records for all pages. Used by the paginator to calculate total pages.\n  pageNr: 1,                                    // Curtent page to display. Used by the paginator render.\n  pageSize: 0,                                  // Current number of items to display on a page. Used by the paginator render.\n  orderBy: '?',                                 // Initial 'Order By' field.\n  orderDir: 'ASC',                              // Initial 'Order Dir' field.\n  onStateChange: () => {}                       // Callback method called when the state of the grid (page, order by, order dir, etc...) is changed. Parameterd: (pageSize, pageNr, orderBy, orderDir).\n};\n\nGrid.propTypes = {\n  emptyText: PropTypes.string,\n  footerText: PropTypes.string,\n  className: PropTypes.string,\n\n  classNamesRenderer: PropTypes.func,\n  onCellClick: PropTypes.func,\n  emptyPlaceholde: PropTypes.string,\n\n  skin: PropTypes.oneOf(['none', 'default', 'classic', 'bootstrap']),\n\n  isSelectable: PropTypes.bool,\n  showSelectionInfo: PropTypes.bool,\n  onSelectionChange: PropTypes.func,\n\n  isExpandable: PropTypes.bool,\n  expandedRowContent: PropTypes.func,\n\n  data: PropTypes.array,\n  keyField: PropTypes.string,\n  loading: PropTypes.bool,\n  dataCount: PropTypes.number,\n  pageNr: PropTypes.number,\n  pageSize: PropTypes.number,\n  orderBy: PropTypes.string,\n  orderDir: PropTypes.string,\n  onStateChange: PropTypes.func\n}\n\nexport { Grid, Column };\n","import React from 'react';\nimport { Grid, Column } from 'react-digital-grid';\n\nconst Simple = () => {\n  const data = [\n    { Id: 1, FirstName: 'Jane', LastName: 'Down', Email: 'jane.down@unknown.com', Age: 26 },\n    { Id: 2, FirstName: 'John', LastName: 'Doe', Email: 'john.doe@unknown.com', Age: 41 }\n  ];\n\n  return (\n    <Grid data={data}> \n      <Column header='Id' field='Id' />\n      <Column header='First Name' field='FirstName' />\n      <Column header='Last Name' field='LastName' />\n      <Column header='Age' field='Age' />\n      <Column \n            header='Email' \n            field='Email'\n            renderer={item => {\n              return <a href={`mailto:${item.Email}`}>{item.Email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Simple;\n","import React, { useState } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport '../../styles/bootstrap-ui.css'\n\nconst Skins = () => {\n\n  const data = [\n    { Id: 1, FirstName: 'Jane', LastName: 'Down', Email: 'jane.down@unknown.com', Age: 26 },\n    { Id: 2, FirstName: 'John', LastName: 'Doe', Email: 'john.doe@unknown.com', Age: 41 }\n  ];\n\n  const skins = [\n    { val: '', text: 'None' },\n    { val: 'default', text: 'Default Skin' },\n    { val: 'bootstrap', text: 'Bootstrap' }\n  ];\n\n  const [ skin, setSkin ] = useState('default');\n\n  return (\n    <>\n      <div className='form'>\n        <div className='form-group'>\n          <label>Skin</label>\n          <select value={skin} onChange={e => setSkin(e.target.value)}>\n            {skins.map(option => {\n              return (\n                <option key={option.val} value={option.val}>\n                  {option.text}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      <div className={ skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n        <Grid \n          data={data}\n          skin={skin}> \n          <Column header='Id' field='Id' />\n          <Column header='First Name' field='FirstName' />\n          <Column header='Last Name' field='LastName' />\n          <Column header='Age' field='Age' />\n          <Column \n                header='Email' \n                field='Email'\n                renderer={item => {\n                  return <a href={`mailto:${item.Email}`}>{item.Email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Skins;\n","import React from 'react';\nimport { Grid, Column } from 'react-digital-grid';\n\nconst Expandable = () => {\n  const data = [\n    { Id: 1, Column1: 'Jane', Column2: 'Doe' },\n    { Id: 2, Column1: 'John', Column2: 'Doe' }\n  ];\n\n  return (\n    <Grid\n      data={data}\n      isExpandable={true}\n      expandedRowContent={row => (\n        <>\n          <p>This is some content for row: {row.Id}</p>\n          <p>You can add even another grid here.</p>\n        </>\n      )}\n    >\n      <Column header='Id' field='Id'></Column>\n      <Column header='Column 1' field='Column1'></Column>\n      <Column header='Column 2' field='Column2'></Column>\n    </Grid>\n  );\n};\n\nexport default Expandable;\n","function get(options, feedback) {\n    options = options || {};\n    feedback = feedback || (() => {});\n    \n    if(!options.url) {\n        console.error('_data.get: missing Url');\n    }\n\n    let total = null;\n\n    fetch(options.url)\n        .then(response => response.json())\n        .then(data => {\n            if(options.orderBy && options.orderDir) {\n                data = sort(data, options.orderBy, options.orderDir)\n            }\n\n            if(options.pageNr && options.pageSize) {\n                let _filter = filter(data, options.pageNr, options.pageSize);\n                data = _filter.data;\n                total = _filter.total;\n            }\n\n            feedback(data, total);\n        });\n}\n\nfunction sort(arr, sortBy, sortDir) {\n    return arr.sort((a, b) => {\n        let aVal = a[sortBy] ? a[sortBy] : \"-\";\n        let bVal = b[sortBy] ? b[sortBy] : \"-\";\n\n        let val = 0;\n        if (aVal > bVal)\n            val = (sortDir === \"ASC\") ? 1 : -1;\n        if (aVal < bVal)\n            val = (sortDir === \"ASC\") ? -1 : 1;\n\n        return val;\n    });\n}\n\nfunction filter(arr, pageNr, pageSize) {\n    let offset = (pageNr - 1) * pageSize;\n    let paginatedItems = arr.slice(offset).slice(0, pageSize);\n    let pages = Math.ceil(arr.length / pageSize);\n    return {\n        total: arr.length,\n        pages: pages,\n        data: paginatedItems\n    };\n}\n\nexport { \n    get    \n}","import React, { Component } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\n\nexport default class Full extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      data: [],\n      count: null,\n      pageSize: 10,\n      pageNr: 1,\n      skin: 'default',\n\n      skins: [\n        { val: '', text: 'None' },\n        { val: 'default', text: 'Default Skin' },\n        { val: 'bootstrap', text: 'Bootstrap' }\n      ],\n      gridInfo : {}\n    };\n\n    this.loadData = this.loadData.bind(this);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(this.state.pageSize, this.state.pageNr);\n  }\n\n  loadData(pageSize, pageNr, orderBy, orderDir) {\n    this.setState(\n      {\n        loading: true,\n        gridInfo : Object.assign(this.state.gridInfo, {\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        })\n      },\n      _data.get(\n        {\n          url: `${process.env.PUBLIC_URL}/data/generated.json`,\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        },\n        (data, count) => {\n          this.setState({\n            data: data,\n            loading: false,\n            dataCount: count,\n            pageNr: pageNr,\n            pageSize: pageSize,\n            orderBy: orderBy,\n            orderDir: orderDir\n          });\n        }\n      )\n    );\n  }\n\n  onSelectionChange (selectedKeys, selectedItems, selectedLast) {\n    this.setState(\n      Object.assign(this.state.gridInfo, {\n        selectedKeys : selectedKeys,\n        selectedLast : selectedLast\n      })\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div className='form'>\n          <div className='form-group'>\n            <label>Skin</label>\n            <select value={this.state.skin} onChange={e => this.setState({ skin: e.target.value })}>\n              {this.state.skins.map(option => {\n                return (\n                  <option key={option.val} value={option.val}>\n                    {option.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n\n        <div style={{ float: 'left' }} className={ this.state.skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n          <Grid\n            id='full'\n            skin={this.state.skin}\n            loading={this.state.loading}\n            emptyText='No data to display at this point.'\n            keyField=\"guid\"\n            data={this.state.data}\n            isSelectable\n            onSelectionChange={this.onSelectionChange}\n            isExpandable\n            expandedRowContent={row => (\n              <pre style={{ maxWidth: 500, overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                {JSON.stringify(row, null, 4)}\n              </pre>\n            )}\n            dataCount={this.state.dataCount}\n            pageNr={this.state.pageNr}\n            pageSize={this.state.pageSize}\n            orderBy={this.state.orderBy}\n            orderDir={this.state.orderDir}\n            onStateChange={newState =>\n              this.loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n            }\n          >\n            <Column\n              header='Picture'\n              field='picture'\n              className='center'\n              renderer={item => {\n                return <img src={item.picture} height='36' className='profilepic' alt={item.name} />;\n              }}\n            ></Column>\n            <Column header='Name' field='name' className='bold' sortable={true}></Column>\n            <Column header='Gender' field='gender'></Column>\n            <Column header='Eye Color' field='eyeColor'></Column>\n            <Column header='Age' field='age' className='bold' sortable={true}></Column>\n            <Column header='Address' field='address' className='italic'></Column>\n            <Column header='Phone' field='phone'></Column>\n          </Grid>\n        </div>\n        <div className='info'>\n            <b>Grid Info</b>: \n            <br />\n            <pre>\n              {JSON.stringify(this.state.gridInfo, null, 4)}\n            </pre>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useState } from 'react';\n\nimport Simple from './examples/simple';\nimport Skins from './examples/skins';\nimport Expandable from './examples/expandable';\nimport Full from './examples/full';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst Examples = (props) => {\n\n    let Example = null;\n    let title = 'Not found';\n    const [ code, setCode ] = useState(\"Loading source code...\");\n\n    switch(props.match.params.example) {\n        case 'simple':\n            title = 'A simple example';\n            Example = Simple;\n            break;\n        case 'expandable':\n            title = 'Expandable content';\n            Example = Expandable;\n            break;\n        case 'full':\n            title = 'Full options enabled';\n            Example = Full;\n            break;\n        case 'skins':\n            title = 'Choosing different skins';\n            Example = Skins;\n            break;            \n        default:\n            break;\n    }\n\n    if(Example)\n    {\n        fetch(`${process.env.PUBLIC_URL}/examples/${props.match.params.example}.jsx`)\n            .then(response => response.text())\n            .then(content => setCode(content));\n    }\n\n    return (\n        <>\n            <h1>{title}</h1>\n            <Example />\n\n            <h1 style={{padding: '30px 0 5px 0', clear: 'both'}}>Code</h1>\n            <SyntaxHighlighter language=\"javascript|html\" style={tomorrowNight}>\n                {code}\n            </SyntaxHighlighter>\n        </>\n    );\n}\n\nexport default Examples;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/home';\nimport MainMenu from 'components/_common/mainMenu';\nimport NotFound from './components/notFound';\nimport PageLink from 'components/_common/pageLink';\nimport PageRedirect from 'components/_common/pageRedirect';\nimport Examples from 'components/examples';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n      <div className='app'>\n        <div className='header'>\n          <PageLink to={`/`}>\n            <span>Digital</span> Grid\n          </PageLink>\n        </div>\n        <div className='main_container'>\n          <div className='left'>\n            <MainMenu />\n          </div>\n          <div className='main'>\n            <Switch>\n              <Route path={`/`} exact component={Home} />\n              <Route path={`/examples/:example`} component={Examples} />\n              <Route path={`/not-found`} component={NotFound} />\n              <PageRedirect to={`/not-found`} />\n            </Switch>\n          </div>\n        </div>\n        <div className='footer'>Digital Grid Examples</div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// use HashRouter to host in GitHub pages. \n// BrowserRouter are not supported here\n\nconst useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\nconst Router = useHash ? HashRouter : BrowserRouter;\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}