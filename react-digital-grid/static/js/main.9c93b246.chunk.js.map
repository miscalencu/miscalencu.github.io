{"version":3,"sources":["components/_common/pageLink.jsx","components/home.jsx","components/_common/mainMenu.jsx","components/notFound.jsx","components/_common/pageRedirect.jsx","digital-grid/paginator.jsx","digital-grid/header.jsx","digital-grid/column.jsx","digital-grid/cell.jsx","digital-grid/expandableCell.jsx","digital-grid/plugins/styles.js","digital-grid/plugins/selection.js","digital-grid/plugins/expandable.js","digital-grid/plugins/all.js","digital-grid/grid.jsx","scripts/data.js","components/examples/simple.jsx","components/examples/skins.jsx","components/examples/paging.jsx","components/examples/expandable.jsx","components/examples/sorting.jsx","components/examples/events.jsx","components/examples/selection.jsx","components/examples/full.jsx","components/examples.jsx","App.js","serviceWorker.js","index.js"],"names":["PageLink","params","href","process","to","children","Home","className","language","style","foundation","MainMenu","NotFound","textAlign","padding","color","icon","faUnlink","size","PageRedirect","url","document","location","Paginator","maximumNumberOfPageButtons","currentPage","this","props","pageNr","pageSize","dataCount","totalNumberOfPages","Math","ceil","currentPageNumber","firstPageButton","number","enabled","previousPageButton","nextPageButton","lastPageButton","displayResultsFrom","displayResultsTo","min","displayResultsTotal","pageNumber","onPageChanged","model","computeModel","classNames","first","disabled","onClick","changePage","faAngleDoubleLeft","prev","faAngleLeft","page","next","faAngleRight","last","faAngleDoubleRight","Component","defaultProps","Header","toolTip","headerClassName","sortable","title","styles","field","orderBy","orderDir","faCaretDown","faCaretUp","faSort","class","isCurrent","onSortChanged","handleSortChange","header","renderHeaderContent","Column","isClickable","Cell","data","valPlain","valFormatted","renderer","ev","dataItem","onCellClick","preventDefault","handleOnClick","emptyPlaceholder","renderCell","ExpandableCell","isVisible","isExpanded","onExpand","cursor","event","faMinusSquare","faPlusSquare","plugin","name","activate","grid","state","prevState","Object","assign","imports","push","gridClassNames","args","skin","onRowClick","item","keyField","selectionResult","key","isCtrl","ctrlKey","isShift","shiftKey","getSelection","removeAllRanges","newSelectedKeys","newSelectedItems","selectedKeys","slice","selectedItems","keyStart","keyEnd","currentKeys","forEach","indexOf","selectedLast","update","filter","selItem","toggleSelectRow","setState","onSelectionChange","isSelectable","console","error","isSelected","onRowMouseOver","currentTarget","classList","add","onMouseOver","onRowMouseOut","remove","onMouseOut","onRowMouseDown","onMouseDown","rowClassNames","addIsExpandedColumn","isExpandable","map","plugins","_styles","_selection","_expandable","preservePriorEvents","alteredState","newState","eventToPreserve","initAll","mixedState","Grid","buidState","classNamesRenderer","footerText","prevProps","JSON","stringify","_state","index","Fragment","join","rowContent","colSpan","length","React","cloneElement","expandedRowContent","getColumns","copyItems","Children","child","i","columns","emptyText","loading","noData","faSync","itemContent","newPage","onStateChange","newOrderBy","neworderDir","validType","isValidElement","type","toArray","subChild","opacity","display","column","renderRows","handlePageChange","showSelectionInfo","faInfoCircle","zoom","paddingRight","float","get","options","feedback","total","fetch","then","response","json","arr","sortBy","sortDir","sort","a","b","aVal","bVal","val","_filter","offset","paginatedItems","pages","Simple","useState","setData","setLoading","useEffect","_data","email","Skins","setSkin","value","onChange","e","target","text","option","Paging","setDataCount","setPageNr","setPageSize","loadData","count","Expandable","row","guid","Sorting","gridProps","setGridProps","Events","selectedData","setSelectedData","Selection","selectionInfo","setSelectionInfo","Full","handleOnCellClick","gridInfo","clickedData","skins","bind","id","maxWidth","overflow","textOverflow","src","picture","height","alt","gender","faMars","faVenus","Examples","example","match","Example","code","setCode","modalShow","setModalShow","modalDataShow","setModalDataShow","content","Modal","setAppElement","getElementById","marginLeft","faCode","clear","tomorrowNight","start","stop","split","line","extractGrid","isOpen","onRequestClose","top","faTimes","App","path","exact","component","Boolean","window","hostname","Router","HashRouter","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c93b246.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageLink = (params) => {\n    // use this way of generating the links for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    return (\n        <>\n            {useHash && <a href={`${process.env.PUBLIC_URL}/#${params.to}`}>{params.children}</a>}\n            {!useHash && <Link to={params.to}>{params.children}</Link>}\n        </>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport PageLink from './../components/_common/pageLink';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { foundation } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n//import Markdown from 'react-markdown';\n\nconst Home = () => {\n\n  /*\n  let [ markDown, setMarkDown ] = useState('');\n\n  useEffect(() => {\n    fetch(`https://raw.githubusercontent.com/miscalencu/Npm-React-Digital-Grid/master/README.md?token=ACYBHE66BT6CPMEERF3AVTK6POP5M`)\n    .then(response => response.text())\n    .then(content => setMarkDown(content));\n  }, []);\n  */\n\n  return (\n    <>\n      <h1>Welcome to the React Digital Grid component</h1>\n      <p>This is a React DataGrid component with features like:</p>\n      <ul>\n        <li><PageLink to={`/examples/simple`}>flexible formatting</PageLink></li>\n        <li><PageLink to={`/examples/skins`}>skins</PageLink></li>\n        <li><PageLink to={`/examples/paging`}>pagination</PageLink></li>\n        <li><PageLink to={`/examples/sorting`}>sorting</PageLink></li>\n        <li><PageLink to={`/examples/expandable`}>expandable content</PageLink></li>\n        <li><PageLink to={`/examples/selection`}>selection</PageLink></li>\n        <li><PageLink to={`/examples/events`}>events</PageLink></li>\n      </ul>\n      <p>You can checkout the <PageLink to={`/examples/full`}>full features here.</PageLink></p>\n      <h1>How to install it</h1>\n      <pre className='code'>\n          npm install --save react-digital-grid\n      </pre>\n      <h1>How to use it</h1>\n      <SyntaxHighlighter language=\"javascript|html\" style={foundation}>\n        { `\n  <Grid \n    data={data}\n  > \n    <Column header='Id' className='left' field='guid' />\n    <Column header='Name' className='bold' field='name' />\n    <Column header='Company' className='bold' field='company' />\n    <Column \n          header='Email' \n          field='email'\n          renderer={item => {\n            return <a href={\\`mailto:\\${item.email}\\`}>{item.email}</a>;\n          }}\n    />\n  </Grid>\n          `\n        }\n      </SyntaxHighlighter>\n      <h1>Documentation</h1>\n      <p>\n        You can find a list with all the supported parameters at: <br />\n        <a href=\"https://github.com/miscalencu/Npm-React-Digital-Grid#parameters\">https://github.com/miscalencu/Npm-React-Digital-Grid#parameters</a>\n      </p>\n    </>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport PageLink from './pageLink';\n\nconst MainMenu = () => {\n  return (\n    <ul>\n      <li>\n        <PageLink to={`/`}>Home</PageLink>\n      </li>\n      <li>\n        Simple Examples\n        <ul>\n          <li>\n            <PageLink to={`/examples/simple`}>Simple</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/skins`}>Skins</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/paging`}>Paging</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/sorting`}>Sorting</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Advanced Examples\n        <ul>\n          <li>\n            <PageLink to={`/examples/events`}>Events</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/selection`}>Selection</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/expandable`}>Expandable content</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/full`}>Full Features</PageLink>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  );\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>404 - Page Not Found</h1>\n      <div style={{ padding: '10px' }}>\n        <h2>Oops! Page not found!</h2>\n        <FontAwesomeIcon color=\"#c00\" icon={faUnlink} size=\"9x\" />\n      </div>\n      <br />\n      <div>\n        <Link to='/'>Go Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst PageRedirect = (params) => {\n    // use this way of redirecting for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    if(useHash) {\n         const url = `${process.env.PUBLIC_URL}/#${params.to}`;\n         document.location.href = url;\n         return null; \n    }\n\n    return (\n        <>\n            {!useHash && <Redirect to={params.to}></Redirect>}\n        </>\n    )\n}\n\nexport default PageRedirect;","import React, { Component } from 'react';\n\nimport {\n  faAngleDoubleLeft,\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\n\nexport default class Paginator extends Component {\n  maximumNumberOfPageButtons = 11;\n\n  computeModel() {\n    let currentPage = this.props.pageNr;\n    let pageSize = this.props.pageSize;\n    let dataCount = this.props.dataCount;\n    let totalNumberOfPages = Math.ceil(dataCount / pageSize);\n\n    return {\n      currentPageNumber: currentPage,\n      totalNumberOfPages: totalNumberOfPages,\n      firstPageButton: {\n        number: 1,\n        enabled: currentPage > 1\n      },\n      previousPageButton: {\n        number: currentPage > 1 ? currentPage - 1 : 1,\n        enabled: currentPage > 1\n      },\n      nextPageButton: {\n        number: currentPage < totalNumberOfPages ? currentPage + 1 : totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      lastPageButton: {\n        number: totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      displayResultsFrom: dataCount === 0 ? 0 : pageSize * (currentPage - 1) + 1,\n      displayResultsTo:\n        dataCount === 0 ? 0 : Math.min(pageSize * (currentPage - 1) + pageSize, dataCount),\n      displayResultsTotal: dataCount\n    };\n  }\n\n  changePage(pageNumber) {\n    this.props.onPageChanged(pageNumber);\n  }\n\n  render() {\n    var model = this.computeModel();\n    return (\n      <ul className='pagination'>\n        <li className={classNames({ first: true, 'page-item': true, disabled: !model.firstPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.firstPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleDoubleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ prev: true, 'page-item': true, disabled: !model.previousPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.previousPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ page: true, 'page-item': true })}>\n          <span className='nowrap page-link'>\n            Page {model.currentPageNumber} of {model.totalNumberOfPages}\n          </span>\n        </li>\n\n        <li className={classNames({ next: true, 'page-item': true, disabled: !model.nextPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.nextPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleRight} />\n          </span>\n        </li>\n        <li className={classNames({ last: true, 'page-item': true, disabled: !model.lastPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.lastPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </span>\n        </li>\n        <li className='right page-item'>\n          <span className='page-link'>\n            Displaying results {model.displayResultsFrom} - {model.displayResultsTo} of{' '}\n            {model.displayResultsTotal}\n          </span>\n        </li>\n      </ul>\n    );\n  }\n}\n\nPaginator.defaultProps = {\n  onPageChanged: () => {}\n};\n","import React from 'react';\nimport { faCaretDown, faCaretUp, faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Header = ({\n  toolTip = '',\n  classNames = '',\n  headerClassName = '',\n  sortable = false,\n  ...props\n}) => {\n  const handleSortChange = () => {\n    let isCurrent = props.field === props.orderBy;\n    props.onSortChanged(\n      props.field,\n      !isCurrent ? 'ASC' : props.orderDir === 'ASC' ? 'DESC' : 'ASC'\n    );\n  };\n\n  const renderHeaderContent = () => {\n    if (sortable) {\n      const styles = {\n        icon:\n          props.field === props.orderBy\n            ? props.orderDir === 'DESC'\n              ? faCaretDown\n              : faCaretUp\n            : faSort,\n        class: props.field === props.orderBy ? 'active' : 'inactive'\n      };\n\n      return (\n        <table className='grid-sort-link' onClick={() => handleSortChange()}>\n          <tbody>\n            <tr>\n              <td className='pr5'>{props.header}</td>\n              <td className='align-middle'>\n                <FontAwesomeIcon icon={styles.icon} className={styles.class} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    } else {\n      return props.header;\n    }\n  };\n\n  return (\n    <th\n      className={`${props.className} grid-header-cell ${headerClassName}`}\n      title={\n        toolTip +\n        (toolTip && sortable ? '\\n' : '') +\n        (sortable ? 'Click to sort this using value!' : '')\n      }\n    >\n      <div className='gridHeader'>{renderHeaderContent()}</div>\n    </th>\n  );\n};\n\nexport default Header;\n\nHeader.defaultProps = {\n  className: ''\n}\n","const Column = ({ isClickable = false }) => {\n  return;\n};\n\nexport default Column;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nexport default function Cell(props) {\n  const renderCell = () => {\n    const handleOnClick = (field, valPlain, dataItem, ev) => {\n      props.onCellClick(field, valPlain, dataItem);\n      ev.preventDefault();\n    };\n\n    let data = props.data;\n    let valPlain = data[props.field];\n\n    let valFormatted = valPlain;\n    if (props.renderer) {\n      valFormatted = props.renderer(data);\n    }\n\n    if (props.isClickable && (valPlain !== '' || props.renderer)) {\n      valFormatted = (\n        <span onClick={ev => handleOnClick(props.field, valPlain, data, ev)}>\n          {valFormatted}\n        </span>\n      );\n    }\n\n    if (!valFormatted) {\n      if (props.emptyPlaceholder !== '') valFormatted = props.emptyPlaceholder;\n    }\n\n    return valFormatted;\n  };\n\n  return (\n    <td className={props.className}>\n      {renderCell()}\n      {props.children}\n    </td>\n  );\n}\n\nCell.defaultProps = {\n  onCellClick: () => {},\n  isClickable: false\n};\n\nCell.propTypes = {\n  onCellClick: PropTypes.func,\n  isClickable: PropTypes.bool\n}\n","import React from 'react';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ExpandableCell = ({ isVisible = false, isExpanded = false, onExpand = () => {} }) => {\n  return (\n    isVisible && (\n      <td>\n        <span style={{ cursor: 'pointer' }} onClick={(event) => onExpand(event)}>\n          <FontAwesomeIcon icon={isExpanded ? faMinusSquare : faPlusSquare} />\n        </span>\n      </td>\n    )\n  );\n};\n\nexport default ExpandableCell;\n","var plugin = function(grid, state, props) {\n    \n    const activate = function(grid, props, state) {\n        let prevState = Object.assign({}, state);\n        // let { skin } = grid.props;\n        \n        // TO DO: import only once, using localStorage\n        // TO DO: import based on the supplied style\n        let imports = [];\n        imports.push(import('./../styles/common.css'));\n        \n        //if(skin !== 'none') {\n            imports.push(import('./../styles/default.css'));\n            imports.push(import('./../styles/classic.css'));\n            imports.push(import('./../styles/bootstrap.css'));\n        //}\n\n        const gridClassNames = (args) => {\n            let classNames = prevState.gridClassNames(args);\n            let { skin } = grid.props;\n            if(skin === 'bootstrap') {\n                // add the 'table' class to the existing ones\n                classNames.push('table');\n            }\n            return classNames;\n        };\n    \n        // this plugin does not alter the state, just includes the css file\n        return {\n            gridClassNames: (args) => gridClassNames(args)\n        };\n    };\n\n    return {\n        name: \"Style Plugin\",\n        enabled: true,\n        activate: activate,\n    };\n\n}();\n\nexport {\n    plugin\n}","var plugin = function() {\n    const name = \"Selection Plugin\";\n    const activate = function(grid, props, state) {\n\n        let prevState = Object.assign({}, state);\n\n        if(!props.isSelectable)\n            return {};\n\n        const { keyField } = props;\n\n        if(!keyField) {\n            console.error(`DIGITAL GRID - You cannot use PLUGIN ${name} when you don't have a keyField defined.`)\n        }\n        \n        const isSelected = (item) => {\n            return grid.state.selectedKeys.indexOf(item[keyField]) !== -1\n        };\n\n        const rowClassNames = (args) => {\n            let { item } = args;\n            let classNames = prevState.rowClassNames(args);\n            if(isSelected(item)) {\n                // add the 'grid-selected' class to the existing ones\n                classNames.push('grid-selected');\n            }\n            return classNames;\n        };\n        const onMouseOver = (args) => {\n            let { event, item } = args;\n            if(!isSelected(item)) {\n                let tr = event.currentTarget;\n                tr.classList.add('grid-selected');\n                }\n            }\n            const onMouseOut = (args) => {\n            let { event, item } = args;\n            if(!isSelected(item)) {\n                let tr = event.currentTarget;\n                tr.classList.remove('grid-selected');\n            }\n        };\n        const onMouseDown = (args) => {\n            let { event } = args;\n            if (event.ctrlKey || event.shiftKey) {\n                event.preventDefault();\n            }\n        };\n\n        return {\n            selectedKeys: [],\n            selectedItems: [],\n            selectedLast: null,\n            onRowClick: (args) => onRowClick(args),\n            onRowMouseOver: (args) => onMouseOver(args),\n            onRowMouseOut: (args) => onMouseOut(args),\n            onRowMouseDown: (args) => onMouseDown(args),\n            rowClassNames : (args) => rowClassNames(args)\n        };\n    };\n\n    let onRowClick = (args) => {\n        let { event, item, grid } = args;\n        let { keyField } = grid.props;\n        let key = keyField ? item[keyField] : 0;\n\n        let selectionResult = toggleSelectRow(event, key, grid.props, grid.state);\n        grid.setState(selectionResult);\n\n        if(grid.props.onSelectionChange)\n            grid.props.onSelectionChange(selectionResult.selectedKeys, selectionResult.selectedItems, selectionResult.selectedLast);\n    }\n\n    function toggleSelectRow(event, key, props, state) {\n        let isCtrl = event.ctrlKey;\n        let isShift = event.shiftKey;\n        \n        if (isCtrl || isShift) {\n            event.preventDefault(); // this works everywhere, except IE\n            document.getSelection().removeAllRanges(); // hack for IE\n        }\n\n        var newSelectedKeys = [];\n        var newSelectedItems = [];\n\n        // keep existing values if Ctrl is pressed\n        if (isCtrl) {\n            newSelectedKeys = state.selectedKeys.slice();\n            newSelectedItems = state.selectedItems.slice();\n        }\n\n        let keyStart = key;\n        let keyEnd = key;\n\n        if (isShift) {\n            let currentKeys = [];\n            props.data.forEach(item => {\n                currentKeys.push(item[props.keyField]);\n            });\n            let posStart = currentKeys.indexOf(state.selectedLast);\n            let posEnd = currentKeys.indexOf(keyStart);\n\n            if (posStart < posEnd) {\n                keyStart = state.selectedLast;\n            } else {\n                keyEnd = state.selectedLast;\n            }\n        }\n\n        let update = false;\n        props.data.forEach(item => {\n            if (item[props.keyField] === keyStart) \n                update = true;\n\n            if (update) {\n                if (newSelectedKeys.indexOf(item[props.keyField]) === -1) {\n                    newSelectedKeys.push(item[props.keyField]);\n                    newSelectedItems.push(item);\n                } else {\n                    newSelectedKeys = newSelectedKeys.filter(key => {\n                        return key !== item[props.keyField];\n                    });\n                    if (props.keyField) {\n                        newSelectedItems = newSelectedItems.filter(selItem => {\n                        return selItem[props.keyField] !== item.key;\n                        });\n                    }\n                }\n            }\n\n            if (item[props.keyField] === keyEnd) {\n                update = false;\n            }\n        });\n\n        return {\n            selectedKeys: newSelectedKeys,\n            selectedItems: newSelectedItems,\n            selectedLast: key    \n        }\n    };\n\n    return {\n        name: name,\n        enabled: true,\n        activate: activate\n    };\n}();\n\nexport {\n    plugin\n}","var plugin = function() {\n    const activate = function(grid, props, state) {\n        return {\n            data: addIsExpandedColumn(props)\n        };\n    };\n\n    const addIsExpandedColumn = function(props) {\n        return props.isExpandable ? props.data.map(item => ({ ...item, isExpanded: false })) : props.data;\n    };\n\n    return {\n        name: \"Expandable Plugin\",\n        enabled: true,\n        activate: activate\n    };\n\n}();\n\nexport {\n    plugin\n}","import * as _styles from './styles';\nimport * as _selection from './selection'\nimport * as _expandable from './expandable'\n\nvar plugins = function() {\n\n    let plugins = [\n        _styles.plugin,\n        _selection.plugin,\n        _expandable.plugin\n    ];\n\n    var initAll = function(grid, state) {        \n        // extract props and state from initial grid\n        let { props } = grid;\n        // alter state by each plugin\n        plugins.forEach(plugin => {\n            if(plugin.enabled) {\n                // get the new state values form plugin\n                let alteredState = plugin.activate(grid, props, state);\n                // preserve inital events from prior plugins or default functionality\n                let mixedState = preservePriorEvents(alteredState, state);\n                // return new state object to main component\n                state = Object.assign(state, mixedState);\n            }\n        });\n\n        // return final state\n        return state;\n    };\n\n    var preservePriorEvents = function(alteredState, state) {\n        let newState = Object.assign({}, alteredState);\n        let prevState = Object.assign({}, state);\n        \n        let eventsToPreserve = [\n            'onRowClick',\n            'onRowMouseOver',\n            'onRowMouseOut',\n            'onRowMouseDown'\n        ];\n\n        eventsToPreserve.forEach(eventToPreserve => {\n            if(newState[eventToPreserve]) {\n                alteredState[eventToPreserve] = (args) => {\n                    prevState[eventToPreserve](args);\n                    newState[eventToPreserve](args);\n                };\n            }\n        });\n\n        // return final state with prior events preserved\n        return alteredState;\n    }\n\n    return {\n        initAll: initAll\n    };\n}();\n\nexport {\n    plugins\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paginator from './paginator';\nimport Header from './header';\nimport Column from './column';\nimport Cell from './cell';\nimport ExpandableCell from './expandableCell';\n\nimport { faSync, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { plugins } from './plugins/all';\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    // set final state\n    this.state = this.buidState(props);\n  }\n\n  buidState(props) {\n    // prepare default state variable\n    // all these items can be altered by the plugins\n    let state = {\n      data: props.data,                               // data that will be displayed by the grid\n\n      onRowClick : () => {},                          // event invoked when a row is clicked\n      onRowMouseOver: () => {},\n      onRowMouseOut: () => {},\n      onRowMouseDown: () => {},\n      rowClassNames: (args) => props.classNamesRenderer(args),\n      gridClassNames: () => { return ['digital-grid']; },\n      footerText: props.footerText\n    };\n\n    // enable plugins that change initial state\n    return plugins.initAll(this, state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // refresh the state every time there is new data sent\n    if(JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) {\n      let _state = this.buidState(this.props);\n      // reset state if different\n      if(JSON.stringify(_state) !== JSON.stringify(prevState)) {\n        this.setState(_state);\n      }\n    }\n  }\n\n  itemContent(item, index) {\n\n    // TO DO: document this as row events parameters /issues/16\n    let params = {\n      item: item, \n      grid: this\n    };\n\n    const { keyField, isExpandable } = this.props;\n    let key = keyField ? item[keyField] : index;\n    let classNames = this.state.rowClassNames(params);\n    \n    return (\n      <React.Fragment \n        key={key}>\n        <tr\n          className={classNames.join(' ')}\n          onClick={(event) => this.state.onRowClick({ event:event, ...params })}\n          onMouseDown={(event) => this.state.onRowMouseDown({ event:event, ...params })}\n          onMouseOver={(event) => this.state.onRowMouseOver({ event:event, ...params })}\n          onMouseOut={(event) => this.state.onRowMouseOut({ event:event, ...params })}>\n          {this.rowContent(item)}\n        </tr>\n        { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n        {isExpandable && item.isExpanded && (\n          <tr>\n            <td> </td>\n            <td colSpan={this.props.children.length}>\n              {React.cloneElement(this.props.expandedRowContent(item), {\n                data: item\n              })}\n            </td>\n          </tr>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  rowContent(item) {\n\n    let children = this.getColumns();\n    const { isExpandable } = this.props;\n    const { data } = this.state;\n\n    return (\n      <React.Fragment>\n        { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n        <ExpandableCell\n          isVisible={isExpandable}\n          isExpanded={item.isExpanded}\n          onExpand={(event) => {\n            event.preventDefault();\n            const copyItems = [...data];\n            const index = copyItems.indexOf(item);\n            copyItems[index] = { ...copyItems[index] };\n            copyItems[index].isExpanded = !copyItems[index].isExpanded;\n            this.setState({ data: copyItems });\n          }}\n        />\n        {React.Children.map(children, (child, i) => {\n          return (\n            <Cell\n              {...child.props}\n              data={item}\n              onCellClick={this.props.onCellClick}\n              emptyPlaceholder={this.props.emptyPlaceholder}\n            />\n          );\n        })}\n    </React.Fragment>\n    );\n  }\n\n  renderRows(columns) {\n    const { emptyText, isExpandable, loading } = this.props;\n    const { data } = this.state;\n    let noData = !data || data.length === 0;\n\n    if (loading && noData) {\n      return (\n        <tr key='loading'>\n          <td\n            colSpan={this.props.children.length + (isExpandable ? 1 : 0)}\n            className='bold center'>\n            <FontAwesomeIcon icon={faSync} className='fa-spin mr4' /> Loading data ...\n          </td>\n        </tr>\n      );\n    } else {\n      if (noData) {\n        return (\n          <tr key='empty'>\n            <td colSpan={this.props.children.length + (isExpandable ? 1 : 0)} className='center'>\n              { emptyText }\n            </td>\n          </tr>\n        );\n      } else {\n        return data.map((item, index) => {\n          return this.itemContent(item, index);\n        });\n      }\n    }\n  };\n\n  handlePageChange(newPage) {\n    this.props.onStateChange({\n      pageSize: this.props.pageSize,\n      pageNr: newPage,\n      orderBy: this.props.orderBy,\n      orderDir: this.props.orderDir\n    });\n  }\n\n  handleSortChange(newOrderBy, neworderDir) {\n    this.props.onStateChange({\n      pageSize: this.props.pageSize,\n      pageNr: 1,\n      orderBy: newOrderBy,\n      orderDir: neworderDir\n    });\n  }\n\n  getColumns() {\n    const children = [];\n    const validType = child => {\n      return React.isValidElement(child) && child.type === Column;\n    };\n\n    // allow only valid Columns in main collection and inside it (in case we have an empty container)\n    React.Children.toArray(this.props.children).map(child => {\n      if (validType(child)) {\n        children.push(child);\n      } else {\n        if (React.isValidElement(child) && child.props.children) {\n          React.Children.toArray(child.props.children).map(subChild => {\n            if (validType(subChild)) {\n              children.push(subChild);\n            }\n\n            return null;\n          });\n        }\n      }\n\n      return null;\n    });\n\n    return children;\n  }\n\n  render() {\n    //console.log(\"DIGITAL GRID - Rendering grid. loading:\", this.props.loading, ', data: ', this.state.data ? this.state.data.length: false);\n    let columns = this.getColumns();\n    let noData = !this.state.data || this.state.data.length === 0;\n    let gridClassNames = this.state.gridClassNames();\n    gridClassNames.push(`skin-${this.props.skin}`);\n    if(this.props.className)\n        gridClassNames.push(this.props.className)\n\n    return (\n      <React.Fragment>\n        <table\n          className={gridClassNames.join(' ')}\n          style={{ opacity: this.props.loading && !noData ? 0.4 : 1 }}>\n          <thead>\n            <tr>\n              { /* TO DO: move this inside the Expandable plugin /issues/16 */ }\n              <th\n                key='emptyHeader'\n                style={this.props.isExpandable && columns.length >= 1 ? {} : { display: 'none' }}>\n              </th>\n              {React.Children.map(columns, (column, i) => {\n                return (\n                  <Header\n                    {...column.props}\n                    orderBy={this.props.orderBy}\n                    key={i}\n                    orderDir={this.props.orderDir}\n                    onSortChanged={(orderBy, orderDir) => this.handleSortChange(orderBy, orderDir)}\n                  />\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderRows(columns)}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={this.props.children.length + (this.props.isExpandable ? 1 : 0)}>\n                {this.props.dataCount > this.state.data.length && this.props.pageSize > 0 && (\n                  <Paginator\n                    pageNr={this.props.pageNr}\n                    pageSize={this.props.pageSize}\n                    dataCount={this.props.dataCount}\n                    onPageChanged={page => this.handlePageChange(page)}\n                  />\n                )}\n                {this.state.footerText}\n                { (!this.props.loading || !noData) && this.props.isSelectable && this.props.showSelectionInfo && (\n                <div className='pt10'>\n                  <FontAwesomeIcon icon={faInfoCircle} style={{ zoom: 1.2, paddingRight: '5px', float: 'left' }} />\n                  <div>\n                      Row selection is enabled.\n                      <br />\n                      Multiselect is also enabled by using the Shift and/or Ctrl keys.\n                  </div>\n                </div>\n                )}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </React.Fragment>\n    );\n\n  }\n}\n\nGrid.defaultProps = {\n  emptyText: 'No data available!',              // Text to be displayed when there is no data to available. Defaults to 'No data available'\n  footerText: '',                               // Text to be displayed in the bottom of the grid. Defaults to '' (empty).\n  className: '',                                // Additional className of the grid table. Defaults to '' (empty).\n  classNamesRenderer: () => { return [] },      // Method to compute additional className for each row. Parameters: see row events parameters.\n  onCellClick: () => {},                        // Callback method to be called (if set) when clicking a column value.\n  emptyPlaceholder: '-',                        // Text to be displayed in each grid cell if the content is empty.\n\n  skin: 'default',                              // Skin of the grid. Can be: 'default', 'classic', 'bootstrap' or 'none'. Defalts to 'default'.\n\n  isSelectable: false,                          // Sets if the grid is selectable. It true, rows can be (multi)selected. Defaults for 'false'.\n  showSelectionInfo: true,                      // Sets if the selection info is displayed in the footer of the grid. Defaults for 'false'.\n  onSelectionChange: () => {},                  // Callback method called when the selection of the rows changed. Parameters: (selectedKeys, selectedItems, selectedLast)\n\n  isExpandable: false,                          // Sets if the grid is expandable. If 'true' will display in the first column a [+] sign that expands the current row. Defaults to 'false'.\n  expandedRowContent: () => { return null; },   // Method used to generate the content of an expanded column. Parameters: (item)\n\n  data: [],                                     // The data that the grid should display.\n  keyField: null,                               // The field name of the data elements that represents a unique key.\n  loading: false,                               // Sets if the grid should display a loading indicator. Defaults to 'false'.\n  dataCount: 0,                                 // The total records of the grid. This is not the count of the 'data' array, but total records for all pages. Used by the paginator to calculate total pages.\n  pageNr: 1,                                    // Curtent page to display. Used by the paginator render.\n  pageSize: 0,                                  // Current number of items to display on a page. Used by the paginator render.\n  orderBy: '?',                                 // Initial 'Order By' field.\n  orderDir: 'ASC',                              // Initial 'Order Dir' field.\n  onStateChange: () => {}                       // Callback method called when the state of the grid (page, order by, order dir, etc...) is changed. Parameterd: (pageSize, pageNr, orderBy, orderDir).\n};\n\nGrid.propTypes = {\n  emptyText: PropTypes.string,\n  footerText: PropTypes.string,\n  className: PropTypes.string,\n\n  classNamesRenderer: PropTypes.func,\n  onCellClick: PropTypes.func,\n  emptyPlaceholde: PropTypes.string,\n\n  skin: PropTypes.oneOf(['none', 'default', 'classic', 'bootstrap']),\n\n  isSelectable: PropTypes.bool,\n  showSelectionInfo: PropTypes.bool,\n  onSelectionChange: PropTypes.func,\n\n  isExpandable: PropTypes.bool,\n  expandedRowContent: PropTypes.func,\n\n  data: PropTypes.array,\n  keyField: PropTypes.string,\n  loading: PropTypes.bool,\n  dataCount: PropTypes.number,\n  pageNr: PropTypes.number,\n  pageSize: PropTypes.number,\n  orderBy: PropTypes.string,\n  orderDir: PropTypes.string,\n  onStateChange: PropTypes.func\n}\n\nexport { Grid, Column };\n","function get(options, feedback) {\n    options = options || {};\n    feedback = feedback || (() => {});\n    \n    if(!options.url) {\n        console.error('_data.get: missing Url');\n    }\n\n    let total = null;\n\n    fetch(options.url)\n        .then(response => response.json())\n        .then(data => {\n            if(options.orderBy && options.orderDir) {\n                data = sort(data, options.orderBy, options.orderDir)\n            }\n\n            if(options.pageNr && options.pageSize) {\n                let _filter = filter(data, options.pageNr, options.pageSize);\n                data = _filter.data;\n                total = _filter.total;\n            }\n\n            feedback(data, total);\n        });\n}\n\nfunction sort(arr, sortBy, sortDir) {\n    return arr.sort((a, b) => {\n        let aVal = a[sortBy] ? a[sortBy] : \"-\";\n        let bVal = b[sortBy] ? b[sortBy] : \"-\";\n\n        let val = 0;\n        if (aVal > bVal)\n            val = (sortDir === \"ASC\") ? 1 : -1;\n        if (aVal < bVal)\n            val = (sortDir === \"ASC\") ? -1 : 1;\n\n        return val;\n    });\n}\n\nfunction filter(arr, pageNr, pageSize) {\n    let offset = (pageNr - 1) * pageSize;\n    let paginatedItems = arr.slice(offset).slice(0, pageSize);\n    let pages = Math.ceil(arr.length / pageSize);\n    return {\n        total: arr.length,\n        pages: pages,\n        data: paginatedItems\n    };\n}\n\nexport { \n    get    \n}","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Simple = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  return (\n    <Grid \n      loading={loading}\n      data={data}\n      className='example-grid'\n    > \n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Simple;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\n\nconst Skins = () => {\n\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  const skins = [\n    { val: 'none', text: 'None' },\n    { val: 'default', text: 'Default Skin' },\n    { val: 'classic', text: 'Classic Skin' },\n    { val: 'bootstrap', text: 'Bootstrap' }\n  ];\n\n  const [ skin, setSkin ] = useState('default');\n\n  return (\n    <>\n      <div className='form'>\n        <div className='form-group'>\n          <label>Skin</label>\n          <select value={skin} onChange={e => setSkin(e.target.value)}>\n            {skins.map(option => {\n              return (\n                <option key={option.val} value={option.val}>\n                  {option.text}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      { /* this enabled Bootstrap in this container only if skin = \"bootstrap\" */ }\n      <div className={ skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n        <Grid \n          loading={loading}\n          skin={skin}\n          data={data}\n          className='example-grid'\n          > \n          <Column header='Id' className='left' field='guid' />\n          <Column header='Name' className='bold' field='name' />\n          <Column header='Company' className='bold' field='company' />\n          <Column header='Age' field='age' />\n          <Column header='Phone' className='italic' field='phone' />\n          <Column \n                header='Email' \n                field='email'\n                renderer={item => {\n                  return <a href={`mailto:${item.email}`}>{item.email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Skins;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Paging = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ dataCount, setDataCount ] = useState(0);\n  const [ pageNr, setPageNr ] = useState(1);\n  const [ pageSize, setPageSize ] = useState(10);\n\n  const loadData = (pageSize, pageNr) => {\n    _data.get(\n    {\n        url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n        pageNr: pageNr,\n        pageSize: pageSize\n    }, (data, count) => {\n      setData(data);\n      setDataCount(count);\n      setPageNr(pageNr);\n      setPageSize(pageSize);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n      loadData(pageSize, pageNr);\n  }, [pageNr, pageSize]);\n\n  return (\n    <Grid \n      loading={loading}\n      data={data}\n      dataCount={dataCount}\n      pageNr={pageNr}\n      pageSize={pageSize}\n      className='example-grid'\n      onStateChange={newState =>\n        loadData(newState.pageSize, newState.pageNr)\n      }\n      > \n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Paging;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Expandable = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n  return (\n    <Grid\n      data={data}\n      loading={loading}\n      isExpandable={true}\n      className='example-grid'\n      expandedRowContent={row => (\n        <>\n          <p>This is some content for row: {row.guid}</p>\n          <p>The entire data item is available.</p>\n          <p>You can add even another grid here.</p>\n        </>\n      )}\n    >\n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Expandable;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Sorting = () => {\n\n  const[ gridProps, setGridProps ] = useState({\n      loading: true,\n      data: [],\n      dataCount: 0,\n      pageNr: 1,\n      pageSize: 10,\n      orderBy: 'name',\n      orderDir: 'ASC'\n  });\n\n  const loadData = (pageSize, pageNr, orderBy, orderDir) => {\n    setGridProps(Object.assign(gridProps, { loading: true }));\n    _data.get(\n    {\n        url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n        pageNr: pageNr,\n        pageSize: pageSize,\n        orderBy: orderBy,\n        orderDir: orderDir\n    }, (data, count) => {\n      setGridProps({\n        loading: false,\n        data: data,\n        dataCount: count,\n        pageNr: pageNr,\n        pageSize: pageSize,\n        orderBy: orderBy,\n        orderDir: orderDir\n      })\n    });\n  }\n\n  useEffect(() => {\n      loadData(gridProps.pageSize, gridProps.pageNr, gridProps.orderBy, gridProps.orderDir);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid \n      {...gridProps}\n      className='example-grid'\n      onStateChange={newState =>\n        loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n      }\n      > \n      <Column header='Id' sortable className='left' field='guid' />\n      <Column header='Name' sortable className='bold' field='name' />\n      <Column header='Company' sortable className='bold' field='company' />\n      <Column header='Age' sortable field='age' />\n      <Column header='Phone' sortable className='italic' field='phone' />\n      <Column sortable\n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Sorting;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Events = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ selectedData, setSelectedData ] = useState({});\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  const handleOnCellClick = (field, valPlain, dataItem, ev) => {\n    setSelectedData({\n      field: field,\n      valPlain: valPlain,\n      dataItem: dataItem\n    });\n  }\n\n  return (\n    <>\n      <div style={{ float: 'left' }}>\n        <Grid \n          loading={loading}\n          data={data}\n          className='example-grid'\n          onCellClick={handleOnCellClick}\n        > \n          <Column header='Id' isClickable className='left link' field='guid' />\n          <Column header='Name' isClickable className='bold link' field='name' />\n          <Column header='Company' isClickable className='bold link' field='company' />\n          <Column header='Age' isClickable className='link' field='age' />\n          <Column header='Phone' isClickable className='italic link' field='phone' />\n          <Column \n            isClickable\n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n          />\n        </Grid>\n      </div>\n      <div className='info'>\n        <b>Clicked cell:</b> \n        <pre>\n          {JSON.stringify(selectedData, null, 4)}\n        </pre>\n      </div>\n    </>\n  );\n};\n\nexport default Events;","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Selection = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ selectionInfo, setSelectionInfo ] = useState({});\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  let onSelectionChange = (selectedKeys, selectedItems, selectedLast) => {\n    setSelectionInfo({\n        selectedKeys : selectedKeys,\n        selectedItems: (selectedItems.length === 1) ? selectedItems : '... all data available here ...',\n        selectedLast : selectedLast\n      })\n    };\n\n  return (\n    <>\n      <div style={{ float: 'left' }}>\n        <Grid \n          loading={loading}\n          data={data}\n          keyField='guid'\n          className='example-grid'\n          isSelectable\n          onSelectionChange={onSelectionChange}\n        > \n          <Column header='Id' className='left' field='guid' />\n          <Column header='Name' className='bold' field='name' />\n          <Column header='Company' className='bold' field='company' />\n          <Column header='Age' field='age' />\n          <Column header='Phone' className='italic' field='phone' />\n          <Column \n                header='Email' \n                field='email'\n                renderer={item => {\n                  return <a href={`mailto:${item.email}`}>{item.email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n      <div className='info'>\n        <b>Clicked cell:</b> \n        <pre>\n          {JSON.stringify(selectionInfo, null, 4)}\n        </pre>\n      </div>\n    </>\n  );\n};\n\nexport default Selection;","import React, { Component } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVenus, faMars } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Full extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      data: [],\n      count: null,\n      pageSize: 10,\n      pageNr: 1,\n      skin: 'default',\n\n      skins: [\n        { val: 'none', text: 'None' },\n        { val: 'default', text: 'Default Skin' },\n        { val: 'classic', text: 'Classic Skin' },\n        { val: 'bootstrap', text: 'Bootstrap' }\n      ],\n      gridInfo : {}\n    };\n\n    this.loadData = this.loadData.bind(this);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.handleOnCellClick = this.handleOnCellClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(this.state.pageSize, this.state.pageNr);\n  }\n\n  loadData(pageSize, pageNr, orderBy, orderDir) {\n    this.setState(\n      {\n        loading: true,\n        gridInfo : Object.assign(this.state.gridInfo, {\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        })\n      },\n      _data.get(\n        {\n          url: `${process.env.PUBLIC_URL}/data/generated.json`,\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        },\n        (data, count) => {\n          this.setState({\n            data: data,\n            loading: false,\n            dataCount: count,\n            pageNr: pageNr,\n            pageSize: pageSize,\n            orderBy: orderBy,\n            orderDir: orderDir\n          });\n        }\n      )\n    );\n  }\n\n  onSelectionChange (selectedKeys, selectedItems, selectedLast) {\n    this.setState(\n      Object.assign(this.state.gridInfo, {\n        selectedKeys : selectedKeys,\n        selectedItems: '... all data available here ...',\n        selectedLast : selectedLast\n      })\n    );\n  };\n\n  handleOnCellClick = (field, valPlain, dataItem, ev) => {\n    this.setState(\n      Object.assign(this.state.gridInfo, \n        { \n          clickedData: \n          {\n            field: field,\n            valPlain: valPlain,\n            dataItem: ' ... all data available here ...'\n          }\n        }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className='form'>\n          <div className='form-group'>\n            <label>Skin</label>\n            <select value={this.state.skin} onChange={e => this.setState({ skin: e.target.value })}>\n              {this.state.skins.map(option => {\n                return (\n                  <option key={option.val} value={option.val}>\n                    {option.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n\n        { /* this enabled Bootstrap in this container only if skin = \"bootstrap\" */ }\n        <div style={{ float: 'left' }} className={ this.state.skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n          <Grid\n            id='full'\n            className='example-grid'\n            skin={this.state.skin}\n            loading={this.state.loading}\n            emptyText='No data to display at this point.'\n            keyField=\"guid\"\n            data={this.state.data}\n            isSelectable\n            onSelectionChange={this.onSelectionChange}\n            isExpandable\n            onCellClick={this.handleOnCellClick}\n            expandedRowContent={row => (\n              <pre style={{ maxWidth: 500, overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                {JSON.stringify(row, null, 4)}\n              </pre>\n            )}\n            dataCount={this.state.dataCount}\n            pageNr={this.state.pageNr}\n            pageSize={this.state.pageSize}\n            orderBy={this.state.orderBy}\n            orderDir={this.state.orderDir}\n            onStateChange={newState =>\n              this.loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n            }\n          >\n            <Column\n              header='Picture'\n              field='picture'\n              className='center'\n              renderer={item => {\n                return <img src={item.picture} height='36' className='profilepic' alt={item.name} />;\n              }}\n            ></Column>\n            <Column header='Name' field='name' isClickable className='bold link' sortable={true}></Column>\n            <Column \n              header='Gender' \n              className='center'\n              isClickable \n              field='gender'\n              renderer={item => {\n                return <FontAwesomeIcon size='lg' icon={item.gender === 'male' ? faMars : faVenus} />;\n              }}></Column>\n            <Column header='Eye Color' isClickable className=\"link\" field='eyeColor'></Column>\n            <Column header='Age' field='age' className='bold' sortable={true}></Column>\n            <Column header='Address' field='address' className='italic'></Column>\n            <Column header='Phone' field='phone'></Column>\n          </Grid>\n        </div>\n        <div className='info'>\n            <b>Grid Properties:</b>\n            <pre>\n              {JSON.stringify(this.state.gridInfo, null, 4)}\n            </pre>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nimport Simple from './examples/simple';\nimport Skins from './examples/skins';\nimport Paging from './examples/paging';\nimport Expandable from './examples/expandable';\nimport Sorting from './examples/sorting';\nimport Events from './examples/events';\nimport Selection from './examples/selection';\nimport Full from './examples/full';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { _data } from 'scripts/all';\n\nconst Examples = (props) => {\n\n    let { example } = props.match.params;\n    let Example = null;\n    let title = 'Not found';\n    const [ code, setCode ] = useState(\"Loading source code...\");\n    const [ modalShow, setModalShow ] = useState(false);\n    const [ modalDataShow, setModalDataShow ] = useState(false);\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        fetch(`${process.env.PUBLIC_URL}/examples/${example}.jsx`)\n            .then(response => response.text())\n            .then(content => {\n                setCode(content);\n                _data.get(\n                    {\n                        url: `${process.env.PUBLIC_URL}/data/${example === 'full' ? 'generated.json' : 'generated_simple.json'}`,\n                        pageNr: 1,\n                        pageSize: 10,\n                        orderBy: '?',\n                        orderDir: 'ASC'\n                    }, (data) => setData(data)\n                );\n            });\n    }, [example]);\n\n    switch(example) {\n        case 'simple':\n            title = 'Simple, basic';\n            Example = Simple;\n            break;\n        case 'skins':\n            title = 'Different skins';\n            Example = Skins;\n            break;\n        case 'paging':\n            title = 'Pagination';\n            Example = Paging;\n            break;  \n        case 'expandable':\n            title = 'Expandable content';\n            Example = Expandable;\n            break;\n        case 'sorting':\n            title = 'Sorting columns';\n            Example = Sorting;\n            break;\n        case 'events':\n            title = 'Available events';\n            Example = Events;\n            break;\n        case 'selection':\n            title = 'Rows selection';\n            Example = Selection;\n            break;\n        case 'full':\n            title = 'Full options enabled';\n            Example = Full;\n            break;\n        default:\n            return null;\n    }\n\n    Modal.setAppElement(document.getElementById('app'))\n\n    const extractGrid = (code) => {\n        let content = [];\n        let start = false;\n        let stop = false;\n        code.split('\\n').forEach(line => {\n            if(line.indexOf('<Grid') !== -1) {\n                content.push('');\n                start = true;\n            }\n            if(start && !stop) \n                content.push(line);\n\n            if(line.indexOf('</Grid') !== -1) {\n                stop = true;\n                content.push('');\n                content.push('');\n            }\n        });\n\n        return content.join('\\n');\n    }\n\n    return (\n        <>\n            <h1>\n                {title}\n                <button onClick={() => setModalDataShow(true)} style={{ marginLeft: '5px' }}>\n                    Show Data Preview <FontAwesomeIcon icon={faCode}></FontAwesomeIcon>\n                </button>\n            </h1>\n            <Example />\n            <h1 style={{padding: '30px 0 5px 0', clear: 'both'}}>\n                Grid Code\n                <button onClick={() => setModalShow(true)} style={{ marginLeft: '5px' }}>\n                    Show Full Page Source Code <FontAwesomeIcon icon={faCode}></FontAwesomeIcon>\n                </button>\n            </h1>\n            <SyntaxHighlighter language=\"javascript|html\" style={tomorrowNight}>\n                {extractGrid(code)}\n            </SyntaxHighlighter>\n\n            <Modal\n                isOpen={modalShow}\n                onRequestClose={() => setModalShow(false)}\n                style={{ content: {top: '85px', padding: '5px' }}}\n            >\n                <button onClick={() => setModalShow(false)}>\n                    Close Full Page Source Code <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\n                </button>\n                <SyntaxHighlighter language=\"javascript|html\" style={tomorrowNight}>\n                    {code}\n                </SyntaxHighlighter>\n            </Modal>\n\n            <Modal\n                isOpen={modalDataShow}\n                onRequestClose={() => setModalDataShow(false)}\n                style={{ content: {top: '85px', padding: '5px' }}}\n            >\n                <button onClick={() => setModalDataShow(false)}>\n                    Close Data Preview <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\n                </button>\n                <SyntaxHighlighter language=\"json\" style={tomorrowNight}>\n                    {JSON.stringify(data, 0, 4)}\n                </SyntaxHighlighter>\n            </Modal>\n        </>\n    );\n}\n\nexport default Examples;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/home';\nimport MainMenu from 'components/_common/mainMenu';\nimport NotFound from './components/notFound';\nimport PageLink from 'components/_common/pageLink';\nimport PageRedirect from 'components/_common/pageRedirect';\nimport Examples from 'components/examples';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n      <div className='app' id='app'>\n        <div className='header'>\n          <PageLink to={`/`}>\n            <span>Digital</span> Grid\n          </PageLink>\n        </div>\n        <div className='main_container'>\n          <div className='left'>\n            <MainMenu />\n          </div>\n          <div className='main'>\n            <Switch>\n              <Route path={`/`} exact component={Home} />\n              <Route path={`/examples/:example`} component={Examples} />\n              <Route path={`/not-found`} component={NotFound} />\n              <PageRedirect to={`/not-found`} />\n            </Switch>\n          </div>\n        </div>\n        <div className='footer'>Digital Grid Examples</div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// use HashRouter to host in GitHub pages. \n// BrowserRouter are not supported here\n\nconst useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\nconst Router = useHash ? HashRouter : BrowserRouter;\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}