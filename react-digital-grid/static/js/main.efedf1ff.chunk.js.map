{"version":3,"sources":["components/_common/pageLink.jsx","components/home.jsx","components/_common/mainMenu.jsx","components/notFound.jsx","components/_common/pageRedirect.jsx","scripts/data.js","components/examples/simple.jsx","components/examples/skins.jsx","components/examples/paging.jsx","components/examples/expandable.jsx","components/examples/sorting.jsx","components/examples/events.jsx","components/examples/selection.jsx","components/examples/full.jsx","components/examples.jsx","App.js","serviceWorker.js","index.js"],"names":["PageLink","params","href","process","to","children","Home","className","language","style","foundation","MainMenu","NotFound","textAlign","padding","color","icon","faUnlink","size","PageRedirect","url","document","location","get","options","feedback","console","error","total","fetch","then","response","json","data","arr","sortBy","sortDir","orderBy","orderDir","sort","a","b","aVal","bVal","val","pageNr","pageSize","_filter","offset","paginatedItems","slice","pages","Math","ceil","length","filter","Simple","useState","setData","loading","setLoading","useEffect","_data","header","field","renderer","item","email","Skins","skin","setSkin","value","onChange","e","target","text","map","option","key","Paging","dataCount","setDataCount","setPageNr","setPageSize","loadData","count","onStateChange","newState","Expandable","isExpandable","expandedRowContent","row","guid","Sorting","gridProps","setGridProps","Object","assign","sortable","Events","selectedData","setSelectedData","float","onCellClick","valPlain","dataItem","ev","isClickable","JSON","stringify","Selection","selectionInfo","setSelectionInfo","keyField","isSelectable","onSelectionChange","selectedKeys","selectedItems","selectedLast","Full","props","handleOnCellClick","setState","state","gridInfo","clickedData","skins","bind","this","id","emptyText","maxWidth","overflow","textOverflow","src","picture","height","alt","name","gender","faMars","faVenus","Component","Examples","example","match","Example","title","code","setCode","modalShow","setModalShow","modalDataShow","setModalDataShow","content","Modal","setAppElement","getElementById","onClick","marginLeft","faCode","clear","tomorrowNight","start","stop","split","forEach","line","indexOf","push","join","extractGrid","isOpen","onRequestClose","top","faTimes","App","path","exact","component","Boolean","window","hostname","Router","HashRouter","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efedf1ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageLink = (params) => {\n    // use this way of generating the links for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    return (\n        <>\n            {useHash && <a href={`${process.env.PUBLIC_URL}/#${params.to}`}>{params.children}</a>}\n            {!useHash && <Link to={params.to}>{params.children}</Link>}\n        </>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport PageLink from './../components/_common/pageLink';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { foundation } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n//import Markdown from 'react-markdown';\n\nconst Home = () => {\n\n  /*\n  let [ markDown, setMarkDown ] = useState('');\n\n  useEffect(() => {\n    fetch(`https://raw.githubusercontent.com/miscalencu/Npm-React-Digital-Grid/master/README.md?token=ACYBHE66BT6CPMEERF3AVTK6POP5M`)\n    .then(response => response.text())\n    .then(content => setMarkDown(content));\n  }, []);\n  */\n\n  return (\n    <>\n      <h1>Welcome to the React Digital Grid component</h1>\n      <p>This is a React DataGrid component with features like:</p>\n      <ul>\n        <li><PageLink to={`/examples/simple`}>flexible formatting</PageLink></li>\n        <li><PageLink to={`/examples/skins`}>skins</PageLink></li>\n        <li><PageLink to={`/examples/paging`}>pagination</PageLink></li>\n        <li><PageLink to={`/examples/sorting`}>sorting</PageLink></li>\n        <li><PageLink to={`/examples/expandable`}>expandable content</PageLink></li>\n        <li><PageLink to={`/examples/selection`}>selection</PageLink></li>\n        <li><PageLink to={`/examples/events`}>events</PageLink></li>\n      </ul>\n      <p>You can checkout the <PageLink to={`/examples/full`}>full features here.</PageLink></p>\n      <h1>How to install it</h1>\n      <pre className='code'>\n          npm install --save react-digital-grid\n      </pre>\n      <h1>How to use it</h1>\n      <SyntaxHighlighter language=\"javascript|html\" style={foundation}>\n        { `\n  <Grid \n    data={data}\n  > \n    <Column header='Id' className='left' field='guid' />\n    <Column header='Name' className='bold' field='name' />\n    <Column header='Company' className='bold' field='company' />\n    <Column \n          header='Email' \n          field='email'\n          renderer={item => {\n            return <a href={\\`mailto:\\${item.email}\\`}>{item.email}</a>;\n          }}\n    />\n  </Grid>\n          `\n        }\n      </SyntaxHighlighter>\n      <h1>Documentation</h1>\n      <p>\n        You can find a  list with all the supported parameters at: <br />\n        <a href=\"https://github.com/miscalencu/Npm-React-Digital-Grid#parameters\">https://github.com/miscalencu/Npm-React-Digital-Grid#parameters</a>\n      </p>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PageLink from './pageLink';\n\nconst MainMenu = () => {\n  return (\n    <ul>\n      <li>\n        <PageLink to={`/`}>Home</PageLink>\n      </li>\n      <li>\n        Simple Examples\n        <ul>\n          <li>\n            <PageLink to={`/examples/simple`}>Simple</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/skins`}>Skins</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/paging`}>Paging</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/sorting`}>Sorting</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Advanced Examples\n        <ul>\n          <li>\n            <PageLink to={`/examples/events`}>Events</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/selection`}>Selection</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/expandable`}>Expandable content</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/full`}>Full Features</PageLink>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  );\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>404 - Page Not Found</h1>\n      <div style={{ padding: '10px' }}>\n        <h2>Oops! Page not found!</h2>\n        <FontAwesomeIcon color=\"#c00\" icon={faUnlink} size=\"9x\" />\n      </div>\n      <br />\n      <div>\n        <Link to='/'>Go Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst PageRedirect = (params) => {\n    // use this way of redirecting for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    if(useHash) {\n         const url = `${process.env.PUBLIC_URL}/#${params.to}`;\n         document.location.href = url;\n         return null; \n    }\n\n    return (\n        <>\n            {!useHash && <Redirect to={params.to}></Redirect>}\n        </>\n    )\n}\n\nexport default PageRedirect;","function get(options, feedback) {\n    options = options || {};\n    feedback = feedback || (() => {});\n    \n    if(!options.url) {\n        console.error('_data.get: missing Url');\n    }\n\n    let total = null;\n\n    fetch(options.url)\n        .then(response => response.json())\n        .then(data => {\n            if(options.orderBy && options.orderDir) {\n                data = sort(data, options.orderBy, options.orderDir)\n            }\n\n            if(options.pageNr && options.pageSize) {\n                let _filter = filter(data, options.pageNr, options.pageSize);\n                data = _filter.data;\n                total = _filter.total;\n            }\n\n            feedback(data, total);\n        });\n}\n\nfunction sort(arr, sortBy, sortDir) {\n    return arr.sort((a, b) => {\n        let aVal = a[sortBy] ? a[sortBy] : \"-\";\n        let bVal = b[sortBy] ? b[sortBy] : \"-\";\n\n        let val = 0;\n        if (aVal > bVal)\n            val = (sortDir === \"ASC\") ? 1 : -1;\n        if (aVal < bVal)\n            val = (sortDir === \"ASC\") ? -1 : 1;\n\n        return val;\n    });\n}\n\nfunction filter(arr, pageNr, pageSize) {\n    let offset = (pageNr - 1) * pageSize;\n    let paginatedItems = arr.slice(offset).slice(0, pageSize);\n    let pages = Math.ceil(arr.length / pageSize);\n    return {\n        total: arr.length,\n        pages: pages,\n        data: paginatedItems\n    };\n}\n\nexport { \n    get    \n}","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Simple = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  return (\n    <Grid \n      loading={loading}\n      data={data}\n      className='example-grid'\n    > \n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Simple;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\n\nconst Skins = () => {\n\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  const skins = [\n    { val: 'none', text: 'None' },\n    { val: 'default', text: 'Default Skin' },\n    { val: 'classic', text: 'Classic Skin' },\n    { val: 'bootstrap', text: 'Bootstrap' }\n  ];\n\n  const [ skin, setSkin ] = useState('default');\n\n  return (\n    <>\n      <div className='form'>\n        <div className='form-group'>\n          <label>Skin</label>\n          <select value={skin} onChange={e => setSkin(e.target.value)}>\n            {skins.map(option => {\n              return (\n                <option key={option.val} value={option.val}>\n                  {option.text}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      { /* this enabled Bootstrap in this container only if skin = \"bootstrap\" */ }\n      <div className={ skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n        <Grid \n          loading={loading}\n          skin={skin}\n          data={data}\n          className='example-grid'\n          > \n          <Column header='Id' className='left' field='guid' />\n          <Column header='Name' className='bold' field='name' />\n          <Column header='Company' className='bold' field='company' />\n          <Column header='Age' field='age' />\n          <Column header='Phone' className='italic' field='phone' />\n          <Column \n                header='Email' \n                field='email'\n                renderer={item => {\n                  return <a href={`mailto:${item.email}`}>{item.email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Skins;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Paging = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ dataCount, setDataCount ] = useState(0);\n  const [ pageNr, setPageNr ] = useState(1);\n  const [ pageSize, setPageSize ] = useState(10);\n\n  const loadData = (pageSize, pageNr) => {\n    _data.get(\n    {\n        url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n        pageNr: pageNr,\n        pageSize: pageSize\n    }, (data, count) => {\n      setData(data);\n      setDataCount(count);\n      setPageNr(pageNr);\n      setPageSize(pageSize);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n      loadData(pageSize, pageNr);\n  }, [pageNr, pageSize]);\n\n  return (\n    <Grid \n      loading={loading}\n      data={data}\n      dataCount={dataCount}\n      pageNr={pageNr}\n      pageSize={pageSize}\n      className='example-grid'\n      onStateChange={newState =>\n        loadData(newState.pageSize, newState.pageNr)\n      }\n      > \n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Paging;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Expandable = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n  return (\n    <Grid\n      data={data}\n      loading={loading}\n      isExpandable={true}\n      className='example-grid'\n      expandedRowContent={row => (\n        <>\n          <p>This is some content for row: {row.guid}</p>\n          <p>The entire data item is available.</p>\n          <p>You can add even another grid here.</p>\n        </>\n      )}\n    >\n      <Column header='Id' className='left' field='guid' />\n      <Column header='Name' className='bold' field='name' />\n      <Column header='Company' className='bold' field='company' />\n      <Column header='Age' field='age' />\n      <Column header='Phone' className='italic' field='phone' />\n      <Column \n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Expandable;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Sorting = () => {\n\n  const[ gridProps, setGridProps ] = useState({\n      loading: true,\n      data: [],\n      dataCount: 0,\n      pageNr: 1,\n      pageSize: 10,\n      orderBy: 'name',\n      orderDir: 'ASC'\n  });\n\n  const loadData = (pageSize, pageNr, orderBy, orderDir) => {\n    setGridProps(Object.assign(gridProps, { loading: true }));\n    _data.get(\n    {\n        url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n        pageNr: pageNr,\n        pageSize: pageSize,\n        orderBy: orderBy,\n        orderDir: orderDir\n    }, (data, count) => {\n      setGridProps({\n        loading: false,\n        data: data,\n        dataCount: count,\n        pageNr: pageNr,\n        pageSize: pageSize,\n        orderBy: orderBy,\n        orderDir: orderDir\n      })\n    });\n  }\n\n  useEffect(() => {\n      loadData(gridProps.pageSize, gridProps.pageNr, gridProps.orderBy, gridProps.orderDir);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid \n      {...gridProps}\n      className='example-grid'\n      onStateChange={newState =>\n        loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n      }\n      > \n      <Column header='Id' sortable className='left' field='guid' />\n      <Column header='Name' sortable className='bold' field='name' />\n      <Column header='Company' sortable className='bold' field='company' />\n      <Column header='Age' sortable field='age' />\n      <Column header='Phone' sortable className='italic' field='phone' />\n      <Column sortable\n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Sorting;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Events = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ selectedData, setSelectedData ] = useState({});\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  const handleOnCellClick = (field, valPlain, dataItem, ev) => {\n    setSelectedData({\n      field: field,\n      valPlain: valPlain,\n      dataItem: dataItem\n    });\n  }\n\n  return (\n    <>\n      <div style={{ float: 'left' }}>\n        <Grid \n          loading={loading}\n          data={data}\n          className='example-grid'\n          onCellClick={handleOnCellClick}\n        > \n          <Column header='Id' isClickable className='left link' field='guid' />\n          <Column header='Name' isClickable className='bold link' field='name' />\n          <Column header='Company' isClickable className='bold link' field='company' />\n          <Column header='Age' isClickable className='link' field='age' />\n          <Column header='Phone' isClickable className='italic link' field='phone' />\n          <Column \n            isClickable\n            header='Email' \n            field='email'\n            renderer={item => {\n              return <a href={`mailto:${item.email}`}>{item.email}</a>;\n            }}\n          />\n        </Grid>\n      </div>\n      <div className='info'>\n        <b>Clicked cell:</b> \n        <pre>\n          {JSON.stringify(selectedData, null, 4)}\n        </pre>\n      </div>\n    </>\n  );\n};\n\nexport default Events;","import React, { useState, useEffect } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\n\nconst Selection = () => {\n  const [ data, setData ] = useState([]);\n  const [ loading, setLoading ] = useState(true);\n  const [ selectionInfo, setSelectionInfo ] = useState({});\n\n  useEffect(() => {\n      _data.get(\n          {\n              url: `${process.env.PUBLIC_URL}/data/generated_simple.json`,\n              pageNr: 1,\n              pageSize: 10\n          }, (data) => {\n            setData(data);\n            setLoading(false);\n          }\n      );\n  }, []);\n\n  let onSelectionChange = (selectedKeys, selectedItems, selectedLast) => {\n    setSelectionInfo({\n        selectedKeys : selectedKeys,\n        selectedItems: (selectedItems.length === 1) ? selectedItems : '... all data available here ...',\n        selectedLast : selectedLast\n      })\n    };\n\n  return (\n    <>\n      <div style={{ float: 'left' }}>\n        <Grid \n          loading={loading}\n          data={data}\n          keyField='guid'\n          className='example-grid'\n          isSelectable\n          onSelectionChange={onSelectionChange}\n        > \n          <Column header='Id' className='left' field='guid' />\n          <Column header='Name' className='bold' field='name' />\n          <Column header='Company' className='bold' field='company' />\n          <Column header='Age' field='age' />\n          <Column header='Phone' className='italic' field='phone' />\n          <Column \n                header='Email' \n                field='email'\n                renderer={item => {\n                  return <a href={`mailto:${item.email}`}>{item.email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n      <div className='info'>\n        <b>Clicked cell:</b> \n        <pre>\n          {JSON.stringify(selectionInfo, null, 4)}\n        </pre>\n      </div>\n    </>\n  );\n};\n\nexport default Selection;","import React, { Component } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVenus, faMars } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Full extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      data: [],\n      count: null,\n      pageSize: 10,\n      pageNr: 1,\n      skin: 'default',\n\n      skins: [\n        { val: 'none', text: 'None' },\n        { val: 'default', text: 'Default Skin' },\n        { val: 'classic', text: 'Classic Skin' },\n        { val: 'bootstrap', text: 'Bootstrap' }\n      ],\n      gridInfo : {}\n    };\n\n    this.loadData = this.loadData.bind(this);\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n    this.handleOnCellClick = this.handleOnCellClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(this.state.pageSize, this.state.pageNr);\n  }\n\n  loadData(pageSize, pageNr, orderBy, orderDir) {\n    this.setState(\n      {\n        loading: true,\n        gridInfo : Object.assign(this.state.gridInfo, {\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        })\n      },\n      _data.get(\n        {\n          url: `${process.env.PUBLIC_URL}/data/generated.json`,\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        },\n        (data, count) => {\n          this.setState({\n            data: data,\n            loading: false,\n            dataCount: count,\n            pageNr: pageNr,\n            pageSize: pageSize,\n            orderBy: orderBy,\n            orderDir: orderDir\n          });\n        }\n      )\n    );\n  }\n\n  onSelectionChange (selectedKeys, selectedItems, selectedLast) {\n    this.setState(\n      Object.assign(this.state.gridInfo, {\n        selectedKeys : selectedKeys,\n        selectedItems: '... all data available here ...',\n        selectedLast : selectedLast\n      })\n    );\n  };\n\n  handleOnCellClick = (field, valPlain, dataItem, ev) => {\n    this.setState(\n      Object.assign(this.state.gridInfo, \n        { \n          clickedData: \n          {\n            field: field,\n            valPlain: valPlain,\n            dataItem: ' ... all data available here ...'\n          }\n        }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className='form'>\n          <div className='form-group'>\n            <label>Skin</label>\n            <select value={this.state.skin} onChange={e => this.setState({ skin: e.target.value })}>\n              {this.state.skins.map(option => {\n                return (\n                  <option key={option.val} value={option.val}>\n                    {option.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n\n        { /* this enabled Bootstrap in this container only if skin = \"bootstrap\" */ }\n        <div style={{ float: 'left' }} className={ this.state.skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n          <Grid\n            id='full'\n            className='example-grid'\n            skin={this.state.skin}\n            loading={this.state.loading}\n            emptyText='No data to display at this point.'\n            keyField=\"guid\"\n            data={this.state.data}\n            isSelectable\n            onSelectionChange={this.onSelectionChange}\n            isExpandable\n            onCellClick={this.handleOnCellClick}\n            expandedRowContent={row => (\n              <pre style={{ maxWidth: 500, overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                {JSON.stringify(row, null, 4)}\n              </pre>\n            )}\n            dataCount={this.state.dataCount}\n            pageNr={this.state.pageNr}\n            pageSize={this.state.pageSize}\n            orderBy={this.state.orderBy}\n            orderDir={this.state.orderDir}\n            onStateChange={newState =>\n              this.loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n            }\n          >\n            <Column\n              header='Picture'\n              field='picture'\n              className='center'\n              renderer={item => {\n                return <img src={item.picture} height='36' className='profilepic' alt={item.name} />;\n              }}\n            ></Column>\n            <Column header='Name' field='name' isClickable className='bold link' sortable={true}></Column>\n            <Column \n              header='Gender' \n              className='center'\n              isClickable \n              field='gender'\n              renderer={item => {\n                return <FontAwesomeIcon size='lg' icon={item.gender === 'male' ? faMars : faVenus} />;\n              }}></Column>\n            <Column header='Eye Color' isClickable className=\"link\" field='eyeColor'></Column>\n            <Column header='Age' field='age' className='bold' sortable={true}></Column>\n            <Column header='Address' field='address' className='italic'></Column>\n            <Column header='Phone' field='phone'></Column>\n          </Grid>\n        </div>\n        <div className='info'>\n            <b>Grid Properties:</b>\n            <pre>\n              {JSON.stringify(this.state.gridInfo, null, 4)}\n            </pre>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\n\nimport Simple from './examples/simple';\nimport Skins from './examples/skins';\nimport Paging from './examples/paging';\nimport Expandable from './examples/expandable';\nimport Sorting from './examples/sorting';\nimport Events from './examples/events';\nimport Selection from './examples/selection';\nimport Full from './examples/full';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { _data } from 'scripts/all';\n\nconst Examples = (props) => {\n\n    let { example } = props.match.params;\n    let Example = null;\n    let title = 'Not found';\n    const [ code, setCode ] = useState(\"Loading source code...\");\n    const [ modalShow, setModalShow ] = useState(false);\n    const [ modalDataShow, setModalDataShow ] = useState(false);\n    const [ data, setData ] = useState([]);\n\n    useEffect(() => {\n        fetch(`${process.env.PUBLIC_URL}/examples/${example}.jsx`)\n            .then(response => response.text())\n            .then(content => {\n                setCode(content);\n                _data.get(\n                    {\n                        url: `${process.env.PUBLIC_URL}/data/${example === 'full' ? 'generated.json' : 'generated_simple.json'}`,\n                        pageNr: 1,\n                        pageSize: 10,\n                        orderBy: '?',\n                        orderDir: 'ASC'\n                    }, (data) => setData(data)\n                );\n            });\n    }, [example]);\n\n    switch(example) {\n        case 'simple':\n            title = 'Simple, basic';\n            Example = Simple;\n            break;\n        case 'skins':\n            title = 'Different skins';\n            Example = Skins;\n            break;\n        case 'paging':\n            title = 'Pagination';\n            Example = Paging;\n            break;  \n        case 'expandable':\n            title = 'Expandable content';\n            Example = Expandable;\n            break;\n        case 'sorting':\n            title = 'Sorting columns';\n            Example = Sorting;\n            break;\n        case 'events':\n            title = 'Available events';\n            Example = Events;\n            break;\n        case 'selection':\n            title = 'Rows selection';\n            Example = Selection;\n            break;\n        case 'full':\n            title = 'Full options enabled';\n            Example = Full;\n            break;\n        default:\n            return null;\n    }\n\n    Modal.setAppElement(document.getElementById('app'))\n\n    const extractGrid = (code) => {\n        let content = [];\n        let start = false;\n        let stop = false;\n        code.split('\\n').forEach(line => {\n            if(line.indexOf('<Grid') !== -1) {\n                content.push('');\n                start = true;\n            }\n            if(start && !stop) \n                content.push(line);\n\n            if(line.indexOf('</Grid') !== -1) {\n                stop = true;\n                content.push('');\n                content.push('');\n            }\n        });\n\n        return content.join('\\n');\n    }\n\n    return (\n        <>\n            <h1>\n                {title}\n                <button onClick={() => setModalDataShow(true)} style={{ marginLeft: '5px' }}>\n                    Show Data Preview <FontAwesomeIcon icon={faCode}></FontAwesomeIcon>\n                </button>\n            </h1>\n            <Example />\n            <h1 style={{padding: '30px 0 5px 0', clear: 'both'}}>\n                Grid Code\n                <button onClick={() => setModalShow(true)} style={{ marginLeft: '5px' }}>\n                    Show Full Page Source Code <FontAwesomeIcon icon={faCode}></FontAwesomeIcon>\n                </button>\n            </h1>\n            <SyntaxHighlighter language=\"javascript|html\" style={tomorrowNight}>\n                {extractGrid(code)}\n            </SyntaxHighlighter>\n\n            <Modal\n                isOpen={modalShow}\n                onRequestClose={() => setModalShow(false)}\n                style={{ content: {top: '85px', padding: '5px' }}}\n            >\n                <button onClick={() => setModalShow(false)}>\n                    Close Full Page Source Code <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\n                </button>\n                <SyntaxHighlighter language=\"javascript|html\" style={tomorrowNight}>\n                    {code}\n                </SyntaxHighlighter>\n            </Modal>\n\n            <Modal\n                isOpen={modalDataShow}\n                onRequestClose={() => setModalDataShow(false)}\n                style={{ content: {top: '85px', padding: '5px' }}}\n            >\n                <button onClick={() => setModalDataShow(false)}>\n                    Close Data Preview <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\n                </button>\n                <SyntaxHighlighter language=\"json\" style={tomorrowNight}>\n                    {JSON.stringify(data, 0, 4)}\n                </SyntaxHighlighter>\n            </Modal>\n        </>\n    );\n}\n\nexport default Examples;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/home';\nimport MainMenu from 'components/_common/mainMenu';\nimport NotFound from './components/notFound';\nimport PageLink from 'components/_common/pageLink';\nimport PageRedirect from 'components/_common/pageRedirect';\nimport Examples from 'components/examples';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n      <div className='app' id='app'>\n        <div className='header'>\n          <PageLink to={`/`}>\n            <span>Digital</span> Grid\n          </PageLink>\n        </div>\n        <div className='main_container'>\n          <div className='left'>\n            <MainMenu />\n          </div>\n          <div className='main'>\n            <Switch>\n              <Route path={`/`} exact component={Home} />\n              <Route path={`/examples/:example`} component={Examples} />\n              <Route path={`/not-found`} component={NotFound} />\n              <PageRedirect to={`/not-found`} />\n            </Switch>\n          </div>\n        </div>\n        <div className='footer'>Digital Grid Examples</div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// use HashRouter to host in GitHub pages. \n// BrowserRouter are not supported here\n\nconst useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\nconst Router = useHash ? HashRouter : BrowserRouter;\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}