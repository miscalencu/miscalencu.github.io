{"version":3,"sources":["components/home.jsx","components/_common/pageLink.jsx","components/_common/mainMenu.jsx","components/notFound.jsx","components/_common/pageRedirect.jsx","digital-grid/paginator.jsx","digital-grid/header.jsx","digital-grid/column.jsx","digital-grid/cell.jsx","digital-grid/expandableCell.jsx","digital-grid/plugins/styles.js","digital-grid/grid.jsx","components/examples/simple.jsx","components/examples/skins.jsx","components/examples/expandable.jsx","scripts/data.js","components/examples/full.jsx","components/examples.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","PageLink","params","href","process","to","children","MainMenu","NotFound","style","textAlign","padding","color","icon","faUnlink","size","PageRedirect","url","document","location","Paginator","maximumNumberOfPageButtons","currentPage","this","props","pageNr","pageSize","dataCount","totalNumberOfPages","Math","ceil","currentPageNumber","firstPageButton","number","enabled","previousPageButton","nextPageButton","lastPageButton","displayResultsFrom","displayResultsTo","min","displayResultsTotal","pageNumber","onPageChanged","model","computeModel","className","classNames","first","disabled","onClick","changePage","faAngleDoubleLeft","prev","faAngleLeft","page","next","faAngleRight","last","faAngleDoubleRight","Component","defaultProps","Header","toolTip","headerClassName","sortable","title","styles","field","orderBy","orderDir","faCaretDown","faCaretUp","faSort","class","isCurrent","onSortChanged","handleSortChange","header","renderHeaderContent","Column","isClickable","Cell","data","valPlain","valFormatted","renderer","ev","dataItem","preventDefault","handleOnClick","emptyPlaceholder","renderCell","ExpandableCell","isVisible","isExpanded","onExpand","cursor","faMinusSquare","faPlusSquare","importStyles","skin","console","log","imports","push","Grid","addIsExpandedColumn","isExpandable","map","item","toggleSelectRow","event","key","isCtrl","ctrlKey","isShift","shiftKey","state","getSelection","removeAllRanges","newSelectedKeys","newSelectedItems","selectedKeys","slice","selectedItems","keyStart","keyEnd","currentKeys","forEach","keyField","indexOf","selectedLast","update","Code","filter","code","selItem","setState","onSelectChanged","renderRows","emptyText","loading","noData","length","colSpan","align","faSync","index","classNameRowRenderer","onMouseOver","onMouseOut","onMouseDown","isSelected","enableSelection","currentTarget","classList","add","remove","Fragment","join","copyItems","React","Children","child","i","onCellClick","cloneElement","expandedRowContent","_styles","prevProps","newPage","onStateChanged","newOrderBy","neworderDir","validType","isValidElement","type","toArray","subChild","gridData","dataItems","opacity","display","showSelectionInfo","handlePageChange","Simple","Id","FirstName","LastName","Email","Age","Skins","useState","setSkin","value","onChange","e","target","val","text","option","Expandable","Column1","Column2","row","get","options","feedback","error","total","fetch","then","response","json","arr","sortBy","sortDir","sort","a","b","aVal","bVal","_filter","offset","paginatedItems","pages","Full","count","skins","loadData","bind","_data","id","newState","src","picture","alt","name","Examples","Example","setCode","match","example","content","marginTop","language","tomorrowNight","App","path","exact","component","Boolean","window","hostname","Router","HashRouter","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2f2cb1a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return <h1>Home here</h1>;\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageLink = (params) => {\n    // use this way of generating the links for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    return (\n        <>\n            {useHash && <a href={`${process.env.PUBLIC_URL}/#${params.to}`}>{params.children}</a>}\n            {!useHash && <Link to={params.to}>{params.children}</Link>}\n        </>\n    )\n}\n\nexport default PageLink;","import React from 'react';\nimport PageLink from './pageLink';\n\nconst MainMenu = () => {\n  return (\n    <ul>\n      <li>\n        <PageLink to={`/`}>Home</PageLink>\n      </li>\n      <li>\n        Basic Features\n        <ul>\n          <li>\n            <PageLink to={`/examples/simple`}>Simple</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/skins`}>Skins</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/paging`}>Paging</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/sorting`}>Sorting</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Advanced Features\n        <ul>\n          <li>\n            <PageLink to={`/events`}>Events</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/selection`}>Selection</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/expandable`}>Expandable content</PageLink>\n          </li>\n          <li>\n            <PageLink to={`/examples/full`}>Full Features</PageLink>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <PageLink to={`/documentation`}>Documentation</PageLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default MainMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faUnlink } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>404 - Page Not Found</h1>\n      <div style={{ padding: '10px' }}>\n        <h2>Oops! Page not found!</h2>\n        <FontAwesomeIcon color=\"#c00\" icon={faUnlink} size=\"9x\" />\n      </div>\n      <br />\n      <div>\n        <Link to='/'>Go Home</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst PageRedirect = (params) => {\n    // use this way of redirecting for the HashRouter\n    // the default implementatin has a bug if the react app is inside a virtual folder\n    // in this case it also adds the folder name after the hash (#).\n    \n    const useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\n    if(useHash) {\n         const url = `${process.env.PUBLIC_URL}/#${params.to}`;\n         document.location.href = url;\n         return null; \n    }\n\n    return (\n        <>\n            {!useHash && <Redirect to={params.to}></Redirect>}\n        </>\n    )\n}\n\nexport default PageRedirect;","import React, { Component } from 'react';\n\nimport {\n  faAngleDoubleLeft,\n  faAngleLeft,\n  faAngleRight,\n  faAngleDoubleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\n\nexport default class Paginator extends Component {\n  maximumNumberOfPageButtons = 11;\n\n  computeModel() {\n    let currentPage = this.props.pageNr;\n    let pageSize = this.props.pageSize;\n    let dataCount = this.props.dataCount;\n    let totalNumberOfPages = Math.ceil(dataCount / pageSize);\n\n    return {\n      currentPageNumber: currentPage,\n      totalNumberOfPages: totalNumberOfPages,\n      firstPageButton: {\n        number: 1,\n        enabled: currentPage > 1\n      },\n      previousPageButton: {\n        number: currentPage > 1 ? currentPage - 1 : 1,\n        enabled: currentPage > 1\n      },\n      nextPageButton: {\n        number: currentPage < totalNumberOfPages ? currentPage + 1 : totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      lastPageButton: {\n        number: totalNumberOfPages,\n        enabled: currentPage < totalNumberOfPages\n      },\n      displayResultsFrom: dataCount === 0 ? 0 : pageSize * (currentPage - 1) + 1,\n      displayResultsTo:\n        dataCount === 0 ? 0 : Math.min(pageSize * (currentPage - 1) + pageSize, dataCount),\n      displayResultsTotal: dataCount\n    };\n  }\n\n  changePage(pageNumber) {\n    this.props.onPageChanged(pageNumber);\n  }\n\n  render() {\n    var model = this.computeModel();\n    return (\n      <ul className='pagination'>\n        <li className={classNames({ first: true, 'page-item': true, disabled: !model.firstPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.firstPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleDoubleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ prev: true, 'page-item': true, disabled: !model.previousPageButton.enabled })}>\n            <span className='page-link' onClick={() => this.changePage(model.previousPageButton.number)}>\n              <FontAwesomeIcon icon={faAngleLeft} />\n            </span>\n        </li>\n        <li className={classNames({ page: true, 'page-item': true })}>\n          <span className='nowrap page-link'>\n            Page {model.currentPageNumber} of {model.totalNumberOfPages}\n          </span>\n        </li>\n\n        <li className={classNames({ next: true, 'page-item': true, disabled: !model.nextPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.nextPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleRight} />\n          </span>\n        </li>\n        <li className={classNames({ last: true, 'page-item': true, disabled: !model.lastPageButton.enabled })}>\n          <span className='page-link' onClick={() => this.changePage(model.lastPageButton.number)}>\n            <FontAwesomeIcon icon={faAngleDoubleRight} />\n          </span>\n        </li>\n        <li className='right page-item'>\n          <span className='page-link'>\n            Displaying results {model.displayResultsFrom} - {model.displayResultsTo} of{' '}\n            {model.displayResultsTotal}\n          </span>\n        </li>\n      </ul>\n    );\n  }\n}\n\nPaginator.defaultProps = {\n  onPageChanged: () => {}\n};\n","import React from 'react';\nimport { faCaretDown, faCaretUp, faSort } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Header = ({\n  toolTip = '',\n  classNames = '',\n  headerClassName = '',\n  sortable = false,\n  ...props\n}) => {\n  const handleSortChange = () => {\n    let isCurrent = props.field === props.orderBy;\n    props.onSortChanged(\n      props.field,\n      !isCurrent ? 'ASC' : props.orderDir === 'ASC' ? 'DESC' : 'ASC'\n    );\n  };\n\n  const renderHeaderContent = () => {\n    if (sortable) {\n      const styles = {\n        icon:\n          props.field === props.orderBy\n            ? props.orderDir === 'DESC'\n              ? faCaretDown\n              : faCaretUp\n            : faSort,\n        class: props.field === props.orderBy ? 'active' : 'inactive'\n      };\n\n      return (\n        <table className='grid-sort-link' onClick={() => handleSortChange()}>\n          <tbody>\n            <tr>\n              <td className='pr5'>{props.header}</td>\n              <td className='align-middle'>\n                <FontAwesomeIcon icon={styles.icon} className={styles.class} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    } else {\n      return props.header;\n    }\n  };\n\n  return (\n    <th\n      className={`${props.className} grid-header-cell ${headerClassName}`}\n      title={\n        toolTip +\n        (toolTip && sortable ? '\\n' : '') +\n        (sortable ? 'Click to sort this using value!' : '')\n      }\n    >\n      <div className='gridHeader'>{renderHeaderContent()}</div>\n    </th>\n  );\n};\n\nexport default Header;\n\nHeader.defaultProps = {\n  className: ''\n}\n","const Column = ({ isClickable = false }) => {\n  return;\n};\n\nexport default Column;\n","import React from 'react';\n\nexport default function Cell(props) {\n  const renderCell = () => {\n    const handleOnClick = (field, valPlain, dataItem, ev) => {\n      props.onClick(field, valPlain, dataItem);\n      ev.preventDefault();\n    };\n\n    let data = props.data;\n    let valPlain = data[props.field];\n\n    let valFormatted = valPlain;\n    if (props.renderer) {\n      valFormatted = props.renderer(data);\n    }\n\n    if (props.isClickable && (valPlain !== '' || props.renderer)) {\n      valFormatted = (\n        <span class='link' onClick={ev => handleOnClick(props.field, valPlain, data, ev)}>\n          {valFormatted}\n        </span>\n      );\n    }\n\n    if (valFormatted === '') {\n      if (props.emptyPlaceholder !== '') valFormatted = props.emptyPlaceholder;\n    }\n\n    return valFormatted;\n  };\n\n  return (\n    <td className={props.className}>\n      {renderCell()}\n      {props.children}\n    </td>\n  );\n}\n\nCell.defaultProps = {\n  onClick: () => {}\n};\n","import React from 'react';\nimport { faMinusSquare, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ExpandableCell = ({ isVisible = false, isExpanded = false, onExpand = () => {} }) => {\n  return (\n    isVisible && (\n      <td>\n        <span style={{ cursor: 'pointer' }} onClick={onExpand}>\n          <FontAwesomeIcon icon={isExpanded ? faMinusSquare : faPlusSquare} />\n        </span>\n      </td>\n    )\n  );\n};\n\nexport default ExpandableCell;\n","// TO DO: import only once, using localStorage\n// TO DO: import based on the supplied style\nfunction importStyles(skin) {\n    console.log(skin);\n    let imports = [];\n    imports.push(import('./../styles/common.css'));\n    \n    if(skin !== 'none') {\n        imports.push(import('./../styles/default.css'));\n    }\n\n    return imports;\n}\n\nexport {\n    importStyles\n}","import React, { Component } from 'react';\nimport Paginator from './paginator';\nimport Header from './header';\nimport Column from './column';\nimport Cell from './cell';\nimport ExpandableCell from './expandableCell';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { _styles } from './plugins/all';\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedKeys: [],\n      selectedItems: [],\n      selectedLast: null,\n      data: this.addIsExpandedColumn(props.data)\n    };\n\n    _styles.importStyles(this.props.skin);\n  }\n\n  addIsExpandedColumn = data => {\n    return this.props.isExpandable ? data.map(item => ({ ...item, isExpanded: false })) : data;\n  };\n\n  componentDidUpdate(prevProps) {\n    const { skin, data } = this.props;\n\n    if (prevProps.skin !== skin) {\n      _styles.importStyles(skin);\n    }\n\n    if (prevProps.data !== data) {\n      this.setState({\n        data: this.addIsExpandedColumn(data)\n      });\n    }\n  }\n\n  toggleSelectRow = (event, key) => {\n    let isCtrl = event.ctrlKey;\n    let isShift = event.shiftKey;\n    const { data } = this.state.data;\n\n    if (isCtrl || isShift) {\n      event.preventDefault(); // this works everywhere, except IE\n      document.getSelection().removeAllRanges(); // hack for IE\n    }\n\n    var newSelectedKeys = [];\n    var newSelectedItems = [];\n\n    // keep existing values if Ctrl is pressed\n    if (isCtrl) {\n      newSelectedKeys = this.state.selectedKeys.slice();\n      newSelectedItems = this.state.selectedItems.slice();\n    }\n\n    let keyStart = key;\n    let keyEnd = key;\n\n    if (isShift) {\n      let currentKeys = [];\n      data.forEach(item => {\n        currentKeys.push(item[this.props.keyField]);\n      });\n      let posStart = currentKeys.indexOf(this.state.selectedLast);\n      let posEnd = currentKeys.indexOf(keyStart);\n\n      if (posStart < posEnd) {\n        keyStart = this.state.selectedLast;\n      } else {\n        keyEnd = this.state.selectedLast;\n      }\n    }\n\n    let update = false;\n    data.forEach(item => {\n      if (item.Code === keyStart) update = true;\n\n      if (update) {\n        if (newSelectedKeys.indexOf(item.Code) === -1) {\n          newSelectedKeys.push(item.Code);\n          newSelectedItems.push(item);\n        } else {\n          newSelectedKeys = newSelectedKeys.filter(code => {\n            return code !== item.Code;\n          });\n          if (this.props.keyField) {\n            newSelectedItems = newSelectedItems.filter(selItem => {\n              return selItem[this.props.keyField] !== item.key;\n            });\n          }\n        }\n      }\n\n      if (item.Code === keyEnd) {\n        update = false;\n      }\n    });\n\n    this.setState({\n      selectedKeys: newSelectedKeys,\n      selectedItems: newSelectedItems,\n      selectedLast: key\n    });\n\n    this.props.onSelectChanged(newSelectedKeys, newSelectedItems);\n  };\n\n  renderRows = children => {\n    const { emptyText, isExpandable, keyField, loading } = this.props;\n    const { data } = this.state;\n    let noData = !data || data.length === 0;\n\n    if (loading && noData) {\n      return (\n        <tr key='loading'>\n          <td\n            colSpan={this.props.children.length + (isExpandable ? 1 : 0)}\n            align='center'\n            className='bold'\n          >\n            <FontAwesomeIcon icon={faSync} className='fa-spin mr-3' /> Loading data ...\n          </td>\n        </tr>\n      );\n    } else {\n      if (noData) {\n        return (\n          <tr key='empty'>\n            <td colSpan={this.props.children.length + (isExpandable ? 1 : 0)} align='center'>\n              {emptyText}\n            </td>\n          </tr>\n        );\n      } else {\n        return data.map((item, index) => {\n          let key = keyField ? item[keyField] : index;\n          let classNames = [];\n          classNames.push(this.props.classNameRowRenderer(item));\n          let onMouseOver = () => {};\n          let onMouseOut = () => {};\n          let onMouseDown = () => {};\n          let onClick = () => {};\n          let isSelected = false;\n\n          if (this.props.enableSelection) {\n            isSelected = this.state.selectedKeys.indexOf(key) !== -1;\n            if (!isSelected) {\n              onMouseOver = event => {\n                let tr = event.currentTarget;\n                tr.classList.add('grid-selected');\n              };\n              onMouseOut = event => {\n                let tr = event.currentTarget;\n                tr.classList.remove('grid-selected');\n              };\n            }\n            onMouseDown = event => {\n              if (event.ctrlKey || event.shiftKey) {\n                event.preventDefault();\n              }\n            };\n            onClick = event => this.toggleSelectRow(event, key, item);\n          }\n\n          if (isSelected) {\n            classNames.push('grid-selected');\n          }\n\n          return (\n            <React.Fragment key={key}>\n              <tr\n                className={classNames.join(' ')}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}\n                onMouseOut={onMouseOut}\n              >\n                <ExpandableCell\n                  isVisible={isExpandable}\n                  isExpanded={item.isExpanded}\n                  onExpand={() => {\n                    const copyItems = [...data];\n                    const index = copyItems.indexOf(item);\n                    copyItems[index] = { ...copyItems[index] };\n                    copyItems[index].isExpanded = !copyItems[index].isExpanded;\n                    this.setState({ data: copyItems });\n                  }}\n                />\n                {React.Children.map(children, (child, i) => {\n                  return (\n                    <Cell\n                      {...child.props}\n                      data={item}\n                      onCellClick={this.props.onCellClick}\n                      emptyPlaceholder={this.props.emptyPlaceholder}\n                    />\n                  );\n                })}\n              </tr>\n              {isExpandable && item.isExpanded && (\n                <tr>\n                  <td> </td>\n                  <td colSpan={this.props.children.length}>\n                    {React.cloneElement(this.props.expandedRowContent(item), {\n                      data: item\n                    })}\n                  </td>\n                </tr>\n              )}\n            </React.Fragment>\n          );\n        });\n      }\n    }\n  };\n\n  handlePageChange(newPage) {\n    this.props.onStateChanged({\n      pageSize: this.props.pageSize,\n      pageNr: newPage,\n      orderBy: this.props.orderBy,\n      orderDir: this.props.orderDir\n    });\n  }\n\n  handleSortChange(newOrderBy, neworderDir) {\n    this.props.onStateChanged({\n      pageSize: this.props.pageSize,\n      pageNr: 1,\n      orderBy: newOrderBy,\n      orderDir: neworderDir\n    });\n  }\n\n  render() {\n    const children = [];\n    const validType = child => {\n      return React.isValidElement(child) && child.type === Column;\n    };\n\n    // allow only valid Columns in main collection and inside it (in case we have an empty container)\n    React.Children.toArray(this.props.children).map(child => {\n      if (validType(child)) {\n        children.push(child);\n      } else {\n        if (React.isValidElement(child) && child.props.children) {\n          React.Children.toArray(child.props.children).map(subChild => {\n            if (validType(subChild)) {\n              children.push(subChild);\n            }\n\n            return null;\n          });\n        }\n      }\n\n      return null;\n    });\n\n    let noData =\n      !this.props.gridData ||\n      !this.props.gridData.dataItems ||\n      this.props.gridData.dataItems.length === 0;\n\n    return (\n      <div className={`digital-grid-wrapper${this.props.skin ? ` skin-${this.props.skin}` : ``}`}>\n        <table\n          className={this.props.className + ' digital-grid ' + ((this.props.skin === 'bootstrap') ? 'table': '')}\n          style={{ opacity: this.props.loading && !noData ? 0.4 : 1 }}\n        >\n          <thead>\n            <tr>\n              <th\n                key='emptyHeader'\n                style={this.props.isExpandable && children.length >= 1 ? {} : { display: 'none' }}\n              ></th>\n              {React.Children.map(children, (child, i) => {\n                return (\n                  <Header\n                    {...child.props}\n                    orderBy={this.props.orderBy}\n                    key={i}\n                    orderDir={this.props.orderDir}\n                    onSortChanged={(orderBy, orderDir) => this.handleSortChange(orderBy, orderDir)}\n                  />\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>{this.renderRows(children)}</tbody>\n        </table>\n        {this.props.enableSelection && this.props.showSelectionInfo && (\n          <div className='text-info p-3'>\n            [icon:info]\n            <small>\n              Row selection is enabled.\n              <br />\n              Multiselect is also enabled by using the Shift and/or Ctrl keys.\n            </small>\n          </div>\n        )}\n        {this.props.dataCount > this.state.data.length && this.props.pageSize > 0 && (\n          <Paginator\n            pageNr={this.props.pageNr}\n            pageSize={this.props.pageSize}\n            dataCount={this.props.dataCount}\n            onPageChanged={page => this.handlePageChange(page)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nGrid.defaultProps = {\n  skin: 'default',\n  className: '',\n  classNameRowRenderer: () => {},\n\n  onStateChanged: () => {},\n  enableSelection: false,\n  onSelectChanged: () => {},\n  showSelectionInfo: true,\n\n  data: [],\n  dataCount: 0,\n  pageNr: 1,\n  pageSize: 0,\n  orderBy: '?',\n  orderDir: 'ASC',\n  emptyText: 'No data available!',\n  isExpandable: false,\n  expandedRowContent: () => {\n    return <></>;\n  }\n};\n\nexport { Grid, Column };\n","import React from 'react';\nimport { Grid, Column } from 'react-digital-grid';\n\nconst Simple = () => {\n  const data = [\n    { Id: 1, FirstName: 'Jane', LastName: 'Down', Email: 'jane.down@unknown.com', Age: 26 },\n    { Id: 2, FirstName: 'John', LastName: 'Doe', Email: 'john.doe@unknown.com', Age: 41 }\n  ];\n\n  return (\n    <Grid data={data}> \n      <Column header='Id' field='Id' />\n      <Column header='First Name' field='FirstName' />\n      <Column header='Last Name' field='LastName' />\n      <Column header='Age' field='Age' />\n      <Column \n            header='Email' \n            field='Email'\n            renderer={item => {\n              return <a href={`mailto:${item.Email}`}>{item.Email}</a>;\n            }}\n      />\n    </Grid>\n  );\n};\n\nexport default Simple;\n","import React, { useState } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport '../../styles/bootstrap-ui.css'\n\nconst Skins = () => {\n\n  const data = [\n    { Id: 1, FirstName: 'Jane', LastName: 'Down', Email: 'jane.down@unknown.com', Age: 26 },\n    { Id: 2, FirstName: 'John', LastName: 'Doe', Email: 'john.doe@unknown.com', Age: 41 }\n  ];\n\n  const skins = [\n    { val: '', text: 'None' },\n    { val: 'default', text: 'Default Skin' },\n    { val: 'bootstrap', text: 'Bootstrap' }\n  ];\n\n  const [ skin, setSkin ] = useState('default');\n\n  return (\n    <>\n      <div className='form'>\n        <div className='form-group'>\n          <label>Skin</label>\n          <select value={skin} onChange={e => setSkin(e.target.value)}>\n            {skins.map(option => {\n              return (\n                <option key={option.val} value={option.val}>\n                  {option.text}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      <div className={ skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n        <Grid \n          data={data}\n          skin={skin}> \n          <Column header='Id' field='Id' />\n          <Column header='First Name' field='FirstName' />\n          <Column header='Last Name' field='LastName' />\n          <Column header='Age' field='Age' />\n          <Column \n                header='Email' \n                field='Email'\n                renderer={item => {\n                  return <a href={`mailto:${item.Email}`}>{item.Email}</a>;\n                }}\n          />\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Skins;\n","import React from 'react';\nimport { Grid, Column } from 'react-digital-grid';\n\nconst Expandable = () => {\n  const data = [\n    { Id: 1, Column1: 'Jane', Column2: 'Doe' },\n    { Id: 2, Column1: 'John', Column2: 'Doe' }\n  ];\n\n  return (\n    <Grid\n      data={data}\n      isExpandable={true}\n      expandedRowContent={row => (\n        <>\n          <p>This is some content for row: {row.Id}</p>\n          <p>You can add even another grid here.</p>\n        </>\n      )}\n    >\n      <Column header='Id' field='Id'></Column>\n      <Column header='Column 1' field='Column1'></Column>\n      <Column header='Column 2' field='Column2'></Column>\n    </Grid>\n  );\n};\n\nexport default Expandable;\n","function get(options, feedback) {\n    options = options || {};\n    feedback = feedback || (() => {});\n    \n    if(!options.url) {\n        console.error('_data.get: missing Url');\n    }\n\n    let total = null;\n\n    fetch(options.url)\n        .then(response => response.json())\n        .then(data => {\n            if(options.orderBy && options.orderDir) {\n                data = sort(data, options.orderBy, options.orderDir)\n            }\n\n            if(options.pageNr && options.pageSize) {\n                let _filter = filter(data, options.pageNr, options.pageSize);\n                data = _filter.data;\n                total = _filter.total;\n            }\n\n            feedback(data, total);\n        });\n}\n\nfunction sort(arr, sortBy, sortDir) {\n    return arr.sort((a, b) => {\n        let aVal = a[sortBy] ? a[sortBy] : \"-\";\n        let bVal = b[sortBy] ? b[sortBy] : \"-\";\n\n        let val = 0;\n        if (aVal > bVal)\n            val = (sortDir === \"ASC\") ? 1 : -1;\n        if (aVal < bVal)\n            val = (sortDir === \"ASC\") ? -1 : 1;\n\n        return val;\n    });\n}\n\nfunction filter(arr, pageNr, pageSize) {\n    let offset = (pageNr - 1) * pageSize;\n    let paginatedItems = arr.slice(offset).slice(0, pageSize);\n    let pages = Math.ceil(arr.length / pageSize);\n    return {\n        total: arr.length,\n        pages: pages,\n        data: paginatedItems\n    };\n}\n\nexport { \n    get    \n}","import React, { Component } from 'react';\nimport { Grid, Column } from 'react-digital-grid';\nimport { _data } from 'scripts/all';\nimport '../../styles/bootstrap-ui.css'\n\nexport default class Full extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      data: [],\n      count: null,\n      pageSize: 10,\n      pageNr: 1,\n      skin: 'default',\n\n      skins: [\n        { val: '', text: 'None' },\n        { val: 'default', text: 'Default Skin' },\n        { val: 'bootstrap', text: 'Bootstrap' }\n      ]\n    };\n\n    this.loadData = this.loadData.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData(this.state.pageSize, this.state.pageNr);\n  }\n\n  loadData(pageSize, pageNr, orderBy, orderDir) {\n    this.setState(\n      {\n        loading: true\n      },\n      _data.get(\n        {\n          url: `${process.env.PUBLIC_URL}/data/generated.json`,\n          pageNr: pageNr,\n          pageSize: pageSize,\n          orderBy: orderBy,\n          orderDir: orderDir\n        },\n        (data, count) => {\n          this.setState({\n            data: data,\n            loading: false,\n            dataCount: count,\n            pageNr: pageNr,\n            pageSize: pageSize,\n            orderBy: orderBy,\n            orderDir: orderDir\n          });\n        }\n      )\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <div className='form'>\n          <div className='form-group'>\n            <label>Skin</label>\n            <select value={this.state.skin} onChange={e => this.setState({ skin: e.target.value })}>\n              {this.state.skins.map(option => {\n                return (\n                  <option key={option.val} value={option.val}>\n                    {option.text}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n\n        <div className={ this.state.skin === \"bootstrap\" ? \"bootstrap-ui\" : \"\"}>\n          <Grid\n            id='full'\n            skin={this.state.skin}\n            loading={this.state.loading}\n            emptyText='No data to display at this point.'\n            data={this.state.data}\n            dataCount={this.state.dataCount}\n            pageNr={this.state.pageNr}\n            pageSize={this.state.pageSize}\n            orderBy={this.state.orderBy}\n            orderDir={this.state.orderDir}\n            onStateChanged={newState =>\n              this.loadData(newState.pageSize, newState.pageNr, newState.orderBy, newState.orderDir)\n            }\n          >\n            <Column\n              header='Picture'\n              field='picture'\n              className='center'\n              renderer={item => {\n                return <img src={item.picture} className='profilepic' alt={item.name} />;\n              }}\n            ></Column>\n            <Column header='Name' field='name' className='bold' sortable={true}></Column>\n            <Column header='Gender' field='gender'></Column>\n            <Column header='Eye Color' field='eyeColor'></Column>\n            <Column header='Age' field='age' className='bold' sortable={true}></Column>\n            <Column header='Address' field='address' className='italic'></Column>\n            <Column header='Phone' field='phone'></Column>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useState } from 'react';\n\nimport Simple from './examples/simple';\nimport Skins from './examples/skins';\nimport Expandable from './examples/expandable';\nimport Full from './examples/full';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst Examples = (props) => {\n\n    let Example = null;\n    let title = 'Not found';\n    const [ code, setCode ] = useState(\"Loading source code...\");\n\n    switch(props.match.params.example) {\n        case 'simple':\n            title = 'A simple example';\n            Example = Simple;\n            break;\n        case 'expandable':\n            title = 'Expandable content';\n            Example = Expandable;\n            break;\n        case 'full':\n            title = 'Full options enabled';\n            Example = Full;\n            break;\n        case 'skins':\n            title = 'Choosing different skins';\n            Example = Skins;\n            break;            \n        default:\n            break;\n    }\n\n    if(Example)\n    {\n        fetch(`${process.env.PUBLIC_URL}/examples/${props.match.params.example}.jsx`)\n            .then(response => response.text())\n            .then(content => setCode(content));\n    }\n\n    return (\n        <>\n            <h1>{title}</h1>\n            <Example />\n\n            <h1 style={{marginTop:'20px'}}>Code</h1>\n            <SyntaxHighlighter language=\"react\" style={tomorrowNight}>\n                {code}\n            </SyntaxHighlighter>\n        </>\n    );\n}\n\nexport default Examples;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/home';\nimport MainMenu from 'components/_common/mainMenu';\nimport NotFound from './components/notFound';\nimport PageLink from 'components/_common/pageLink';\nimport PageRedirect from 'components/_common/pageRedirect';\nimport Examples from 'components/examples';\nimport './styles/app.css';\n\nfunction App() {\n  return (\n      <div className='app'>\n        <div className='header'>\n          <PageLink to={`/`}>\n            <span>Digital</span> Grid\n          </PageLink>\n        </div>\n        <div className='main_container'>\n          <div className='left'>\n            <MainMenu />\n          </div>\n          <div className='main'>\n            <Switch>\n              <Route path={`/`} exact component={Home} />\n              <Route path={`/examples/:example`} component={Examples} />\n              <Route path={`/not-found`} component={NotFound} />\n              <PageRedirect to={`/not-found`} />\n            </Switch>\n          </div>\n        </div>\n        <div className='footer'>Digital Grid Examples</div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// use HashRouter to host in GitHub pages. \n// BrowserRouter are not supported here\n\nconst useHash = process.env.REACT_APP_ROUTER_TYPE === \"hash\";\nconst Router = useHash ? HashRouter : BrowserRouter;\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}